I = λx.x
C = λx.λ_.x
B = λf.λg.λx.f(g x)
M = λf.f f
Y = λf.(λx.(x x) λx.(f λy.(x x y)))
void = λ_.M M

let = λx.λf.f x

T = λx.λy.x
F = λx.λy.y
not = λb.b F T
and = λa.λb.a b F
or = λa.λb.a T b

do2 = F
if = λp.λa.λb.p a b p

pair = λx.λy.λf.f x y
fst = λp.p T
snd = λp.p F

0 = λf.λx.x
succ = λn.λf.λx.f(n f x)
phi = λp.pair (succ (fst p)) (fst p)
prev = λn.n phi (pair 0 0) F

zero? = λn.n F not F

1 = succ 0    2 = succ 1    3 = succ 2
4 = succ 3    5 = succ 4    6 = succ 5
7 = succ 6    8 = succ 7    9 = succ 8
10 = succ 9   100 = λx.10 (10 x)

+ = λa.λb.a succ b
- = λa.λb.b prev a
* = B
^ = λx.λy.y x

ge? = λa.λb.zero? (- b a)
le? = λa.λb.zero? (- a b)
gt? = λa.λb.not (le? a b)
lt? = λa.λb.not (ge? a b)
eq? = λa.λb.and (ge? a b) (le? a b)

nil = C T
empty? = λl.l λh.λt.F
cons = pair
head = fst
tail = snd

repeat = λn.λf.n (λi.do2 (f i) (succ i)) 0
for = λn.λf.λx.snd (n (λp.pair (succ (fst p)) (p f)) (pair 0 x))

fact = λn.for n (λindex.λstate.* (succ index) state) 1
fact 5