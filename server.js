import{Server as B}from"node:http";import{Server as A}from"../node_modules/socket.io/wrapper.mjs";import{compare as M,hash as Z}from"../node_modules/bcrypt/bcrypt.js";import{randomUUID as T}from"crypto";import{MongoClient as x}from"../node_modules/mongodb/lib/index.js";var p=process.env.ZSNOUT_DATABASE?new x(process.env.ZSNOUT_DATABASE,{serverApi:"1"}).connect().then(e=>(e.on("error",async()=>{await e.close(),await e.connect()}),e)).catch(e=>(console.log(e),void 0)):Promise.resolve((console.log("no database available"),void 0)),k=p.then(e=>e==null?void 0:e.db("zsnout")).catch(e=>(console.log(e),void 0)),L=p.then(e=>!!e)??Promise.resolve(!1);async function w(e){var s;return(s=await k)==null?void 0:s.collection(e)}process.on("beforeExit",()=>{p.then(e=>e==null?void 0:e.close())});import{createTransport as P}from"../node_modules/nodemailer/lib/nodemailer.js";var _={host:process.env.ZSNOUT_MAIL_HOST,port:+(process.env.ZSNOUT_MAIL_PORT||587),secure:process.env.ZSNOUT_MAIL_PORT==="465",auth:{user:process.env.ZSNOUT_MAIL_USER,pass:process.env.ZSNOUT_MAIL_PASSWORD}},Y=!!(process.env.ZSNOUT_MAIL_HOST&&process.env.ZSNOUT_MAIL_USER&&process.env.ZSNOUT_MAIL_PASSWORD),c=P(_);function g(e){return new Promise(s=>{c==null||c.sendMail({...e,from:process.env.ZSNOUT_MAIL_FROM},(o,n)=>{o?(console.log(o),s(void 0)):s(n)})})}process.on("beforeExit",()=>c==null?void 0:c.close());var m;(n=>{function e(t){return t.length>=5&&t.length<=20&&/^[A-Za-z_][A-Za-z0-9_]+$/.test(t)&&!/zsnout/i.test(t)}n.Username=e;function s(t){return t.length>=8&&/(?![\d_])\w/.test(t)&&/\d/.test(t)&&/[^\s\w]/.test(t)}n.Password=s;function o(t){return/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(t)}n.Email=o})(m||={});function I(e){return Z(e,10)}function z(e,s){return M(e,s)}var i=w("accounts");async function S(e,s){let o=await i;if(!o)return{status:u.NoServer};let n=await o.findOne({username:e});return n?await z(s,n.password)?{status:u.Success,account:n}:{status:u.BadPassword}:{status:u.NoUser}}var u=(t=>(t[t.BadPassword=0]="BadPassword",t[t.NoServer=1]="NoServer",t[t.NoUser=2]="NoUser",t[t.Success=3]="Success",t))(u||{});async function y(e){let s=await i;if(!s)return{status:l.NoServer};let o=await s.findOne({session:e});return o?{status:l.Success,account:o}:{status:l.Failure}}var l=(n=>(n[n.Failure=0]="Failure",n[n.NoServer=1]="NoServer",n[n.Success=2]="Success",n))(l||{});async function h(e,s,o){let n=await i;if(!n)return{status:a.NoServer};if(!m.Username(e))return{status:a.BadUsername};if(!m.Password(s))return{status:a.BadPassword};if(!m.Email(o))return{status:a.BadEmail};if(await b(),await n.findOne({username:e}))return{status:a.UsernameTaken};if(await n.findOne({email:o}))return{status:a.EmailTaken};let t={username:e,password:await I(s),email:o,creation:Date.now(),session:T(),verified:!1,verifyCode:T(),bookmarks:[]};return(await n.insertOne(t)).acknowledged?await g({to:o,subject:"Verify your zSnout account",text:`Hey @${e}! Verify your new zSnout account by opening this link: https://zsnout.com/account/verify?code=${t.verifyCode}.`})?{status:a.Success,account:t}:(await n.deleteOne({session:t.session}),{status:a.BadEmail}):{status:a.Failure}}var a=(r=>(r[r.BadUsername=0]="BadUsername",r[r.BadPassword=1]="BadPassword",r[r.BadEmail=2]="BadEmail",r[r.EmailTaken=3]="EmailTaken",r[r.Failure=4]="Failure",r[r.NoServer=5]="NoServer",r[r.Success=6]="Success",r[r.UsernameTaken=7]="UsernameTaken",r))(a||{});async function O(e){let s=await i;if(!s)return{status:f.NoServer};let o=await s.findOneAndUpdate({verifyCode:e},{$set:{verified:!0}});return o.value?{status:f.Success,account:o.value}:{status:f.NoAccount}}var f=(n=>(n[n.NoAccount=0]="NoAccount",n[n.NoServer=1]="NoServer",n[n.Success=2]="Success",n))(f||{});async function b(){let e=await i;await(e==null?void 0:e.deleteMany({verified:!1,creation:{$lte:Date.now()-15*60*1e3}}))}async function N(e){var s;return await((s=await i)==null?void 0:s.findOne({session:e}))||void 0}async function U(e,s){var o,n;return(n=await((o=await i)==null?void 0:o.updateOne({session:e},{$set:s})))==null?void 0:n.acknowledged}setInterval(b,5*60*1e3);async function d(e,s){let{status:o,account:n}=await y(s);return o===2?(e.emit("account:update:session",n.session),e.emit("account:update:username",n.username),e.oldSession&&e.leave(`session:${e.oldSession}`),e.join(`session:${e.oldSession=s}`),!0):(e.emit("account:update:session",""),e.emit("account:update:username",""),e.oldSession&&e.leave(`session:${e.oldSession}`),!1)}var v={"account:check-session"(e){d(this,e)},async"account:create"(e,s,o){let{status:n,account:t}=await h(e,s,o);n===6?(await d(this,t.session),this.emit("account:complete-login")):this.emit("error",{[2]:"Your email address is invalid. Make sure it is formatted properly and can recieve emails.",[1]:"Your password should have a letter, number, symbol, and be at least 8 characters long.",[0]:"Your username should only contain letters, numbers, and underscores, and should be at least 6 characters long.",[3]:`${o} is already registered with another account.`,[4]:"An unknown issue occurred. Try again later.",[5]:"This instance of zSnout can't log in users.",[7]:`@${e} is already registered with another account.`}[n])},async"account:login"(e,s){let{status:o,account:n}=await S(e,s);o===3?(await d(this,n.session),this.emit("account:complete-login")):this.emit("error",{[0]:"Your username or password is incorrect.",[1]:"This instance of zSnout can't log in users.",[2]:"Your username or password is incorrect."}[o])},async"account:verify"(e){let{status:s,account:o}=await O(e);s===2?(await d(this,o.session),this.emit("account:complete-login")):this.emit("error",{[0]:"The provided verification code is invalid.",[1]:"This instance of zSnout can't verify accounts."}[s])},async"bookmarks:request"(e){var s;if(await d(this,e)){let o=(s=await N(e))==null?void 0:s.bookmarks;o&&this.emit("bookmarks:list",o)}},async"bookmarks:update"(e,s){await d(this,e)&&await U(e,{bookmarks:s})&&s&&this.to(`session:${e}`).emit("bookmarks:list",s)}};Object.setPrototypeOf(v,null);function E(e){new A(e).on("connection",o=>{for(let n in v)o.on(n,v[n].bind(o))})}function se(){let e=new B;E(e);let s=+(process.env.PORT||3e3);e.listen(Number.isSafeInteger(s)?s:3e3)}export{E as makeIO,se as start};
