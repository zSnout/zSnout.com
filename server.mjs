import{ObjectId as Be}from"mongodb";import{randomUUID as Ze}from"node:crypto";import{Server as ze}from"node:http";import{Server as Ye}from"socket.io";import We from"ytdl-core";import{compare as Me,hash as Ne}from"bcrypt";import{randomUUID as J}from"node:crypto";import{MongoClient as De}from"mongodb";var L=process.env.ZSNOUT_DATABASE?new De(process.env.ZSNOUT_DATABASE,{serverApi:"1"}).connect().then(e=>(e.on("error",async()=>{await e.close(),await e.connect()}),e)).catch(e=>(console.log(e),void 0)):Promise.resolve((console.log("no database available"),void 0)),Ae=L.then(e=>e==null?void 0:e.db("zsnout")).catch(e=>(console.log(e),void 0)),Qe=L.then(e=>!!e)??Promise.resolve(!1);async function S(e){var t;return(t=await Ae)==null?void 0:t.collection(e)}process.on("beforeExit",()=>{L.then(e=>e==null?void 0:e.close())});S("accounts").then(e=>{e&&(e.updateMany({invites:{$exists:!1}},{$set:{invites:[]}}),e.updateMany({stories:{$exists:!1}},{$set:{stories:[]}}))}).catch(()=>{});import{createTransport as ke}from"nodemailer";var Ce={host:process.env.ZSNOUT_MAIL_HOST,port:+(process.env.ZSNOUT_MAIL_PORT||587),secure:process.env.ZSNOUT_MAIL_PORT==="465",auth:{user:process.env.ZSNOUT_MAIL_USER,pass:process.env.ZSNOUT_MAIL_PASSWORD}},et=!!(process.env.ZSNOUT_MAIL_HOST&&process.env.ZSNOUT_MAIL_USER&&process.env.ZSNOUT_MAIL_PASSWORD),$=ke(Ce);function W(e){return new Promise(t=>{$==null||$.sendMail({...e,from:process.env.ZSNOUT_MAIL_FROM},(n,s)=>{n?(console.log(n),t(void 0)):t(s)})})}process.on("beforeExit",()=>$==null?void 0:$.close());var D;(s=>{function e(a){return a.length>=5&&a.length<=20&&/^[A-Za-z_][A-Za-z0-9_]+$/.test(a)&&!/zsnout/i.test(a)}s.Username=e;function t(a){return a.length>=8&&/(?![\d_])\w/.test(a)&&/\d/.test(a)}s.Password=t;function n(a){return/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)}s.Email=n})(D||={});function G(e){return Ne(e,10)}function K(e,t){return Me(e,t)}var T=S("accounts");async function Q(e,t){let n=await T;if(!n)return{status:1};let s=await n.findOne({username:e});return s?await K(t,s.password)?{status:3,account:s}:{status:0}:{status:2}}async function A(e){let t=await T;if(!t)return{status:1};let n=await t.findOne({session:e});return n?{status:2,account:n}:{status:0}}async function V(e,t,n){let s=await T;if(!s)return{status:0};if(!D.Username(e))return{status:3};if(!D.Password(t))return{status:4};if(!D.Email(n))return{status:5};if(await s.findOne({username:e}))return{status:7};if(await s.findOne({email:n}))return{status:8};let a={username:e,password:await G(t),email:n,creation:Date.now(),session:J(),verified:!1,verifyCode:J(),bookmarks:[],notes:[],chats:[],invites:[],stories:[],willNotifyForBlog:!0};return(await s.insertOne(a)).acknowledged?await W({to:n,subject:"Verify your zSnout account",text:`Hey @${e}! Verify your new zSnout account by opening this link: https://zsnout.com/verify-account?code=${a.verifyCode}.`})?{status:2,account:a}:(await s.deleteOne({session:a.session}),{status:5}):{status:1}}async function X(e){let t=await T;if(!t)return{status:1};let n=await t.findOneAndUpdate({verifyCode:e},{$set:{verified:!0}});return n.value?{status:2,account:n.value}:{status:0}}async function He(){let e=await T;await(e==null?void 0:e.deleteMany({verified:!1,creation:{$lte:Date.now()-15*60*1e3}}))}async function y(e){var t;return await((t=await T)==null?void 0:t.findOne({session:e}))||void 0}async function C(e,t){var n,s;return((s=await((n=await T)==null?void 0:n.updateOne({session:e},t)))==null?void 0:s.acknowledged)||!1}async function U(e,t){return C(e,{$set:t})}async function ee(e,t){let n=await T;return n?D.Username(t)?await n.findOne({username:t})?7:await U(e,{username:t})?2:1:3:0}async function te(e,t,n){if(!await T)return 0;if(!D.Password(n))return 4;let a=await y(e);return a?await K(t,a.password)?await U(e,{password:await G(n)})?2:1:6:1}setInterval(He,5*60*1e3);import{ObjectId as v}from"mongodb";import{randomUUID as ne}from"node:crypto";var j=S("accounts"),P=S("chats");async function q(e){let[t,n]=await Promise.all([P,y(e)]);if(!t||!n)return[];let s=n._id.toHexString();return(await t.find({_id:{$in:n.chats}}).toArray()).map(r=>({id:r._id.toHexString(),level:r.members[s],title:r.title})).filter(r=>r.level&&r.level!=="none")}async function se(e,t){let[n,s]=await Promise.all([P,y(e)]);if(!n||!s)return!1;let a=new v;if(!await U(e,{chats:s.chats.concat(a)}))return!1;let{acknowledged:r}=await n.insertOne({_id:a,creation:Date.now(),members:{[s._id.toHexString()]:"manage"},messages:[{content:`Welcome to your new chat, ${s.username}!`,from:"zSnout",id:ne(),timestamp:Date.now()}],title:t.slice(0,100),defaultLevel:"none"});return r}async function k(e,t){if(t.length!==24)return{permission:"none"};let[n,s]=await Promise.all([P,y(e)]);if(!n||!s)return{permission:"none"};let a=s._id.toHexString(),r=await n.findOne({_id:v.createFromHexString(t)});if(!r)return{permission:"none"};let i=r.members[a]||r.defaultLevel;return!i||i==="none"?{permission:"none"}:{permission:i,messages:r.messages,title:r.title,members:r.members}}async function re(e,t){if(e.length!==24)return!1;let n=await P;if(!n)return!1;let{acknowledged:s}=await n.updateOne({_id:v.createFromHexString(e)},{$set:{title:t.slice(0,100)}});return s}async function ae(e,t,n){if(e.length!==24)return!1;let s=await P;if(!s)return!1;let a={content:n.slice(0,1e3),id:ne(),timestamp:Date.now(),from:t},{acknowledged:r}=await s.updateOne({_id:v.createFromHexString(e)},{$push:{messages:a}});return r?a:!1}async function ie(e,t,n){if(t.length!==24)return!1;let s=await P;if(!s)return!1;let{acknowledged:a}=await s.updateOne({_id:v.createFromHexString(t)},{$pull:{messages:{id:n,from:e}}});return a}async function E(e){var s;let t=(s=await j)==null?void 0:s.find({_id:{$in:Object.keys(e).filter(a=>a.length===24).map(a=>v.createFromHexString(a))}});if(!t)return Object.create(null);let n=await t.toArray();return Object.fromEntries(n.map(({_id:a,username:r})=>[r,e[a.toHexString()]]).filter(a=>a[1]))}async function oe(e){var a;let t=Object.create(null);for(let r in e)t[r.toLowerCase()]=e[r];let n=(a=await j)==null?void 0:a.find({username:{$in:Object.keys(t).map(r=>new RegExp(`^${r}$`,"i"))}});if(!n)return{};let s=await n.toArray();return Object.fromEntries(s.map(({_id:r,username:i})=>[r.toHexString(),t[i.toLowerCase()]]).filter(r=>r[1]))}async function ce(e,t){if(e.length!==24)return!1;for(let i in t)if(i.length!==24)return!1;let[n,s]=await Promise.all([j,P]);if(!n||!s)return!1;let a=v.createFromHexString(e),r;return{acknowledged:r}=await n.updateMany({},{$pull:{chats:a}}),!r||({acknowledged:r}=await n.updateMany({_id:{$in:Object.keys(t).filter(i=>i.length===24).filter(i=>t[i]!=="none").map(i=>v.createFromHexString(i))}},{$push:{chats:a}}),!r)?!1:({acknowledged:r}=await s.updateOne({_id:a},{$set:{members:t}}),r)}async function ue(e,t){if(e.length!==24||t.length!==24)return;let n=await P;if(!n)return;let{members:s}=await n.findOne({_id:v.createFromHexString(e)})||{};s&&(delete s[t],await n.updateOne({_id:v.createFromHexString(e)},{$set:{members:s}}))}async function me(e,t,n,s){if(t.length!==24)return;let a=await P;if(!a)return;let{messages:r}=await a.findOne({_id:v.createFromHexString(t)})||{};if(!r)return;let i=r.find(({id:f})=>f===n);if(!i||i.from!==e)return;i.content=s;let{acknowledged:o}=await a.updateOne({_id:v.createFromHexString(t)},{$set:{messages:r}});if(o)return i}function le(e,t){return Object.fromEntries(Object.entries(e).map(([n,s])=>[t.usernames[n]??=`<deleted user #${++t.nextDeleted}>`,s]).sort(([n],[s])=>n<s?-1:n>s?1:0))}async function de(e){var c,p;let t=await y(e);if(!t)throw new Error("You are not logged in.");let n=(p=await((c=await S("accounts"))==null?void 0:c.find().toArray()))==null?void 0:p.map(({_id:w,username:g})=>[w.toHexString(),g]);if(!n)throw new Error("Unable to fetch username list.");let s={account:t,usernames:Object.fromEntries(n),nextDeleted:0},[a,r,i]=await Promise.all([Re(s),Fe(s),Le(s)]),{bookmarks:o,creation:f,email:l,username:h,verified:d,willNotifyForBlog:u}=t;return{account:{username:h,email:l,verified:d,creation:new Date(f),willNotifyForBlog:u},bookmarks:o,chats:a,notes:r,stories:i}}async function Re(e){let t=await S("chats");if(!t)throw new Error("Unable to get chat info.");return(await t.find({_id:{$in:e.account.chats}}).toArray()).map(({_id:s,creation:a,defaultLevel:r,members:i,messages:o,title:f})=>({id:s.toJSON(),creation:new Date(a),title:f,levels:{default:r,members:le(i,e)},messages:o.map(({from:l,timestamp:h,content:d})=>({creation:new Date(h),from:l,content:d}))}))}async function Fe(e){let t=await S("notes");if(!t)throw new Error("Unable to get note info.");return(await t.find({_id:{$in:e.account.notes}}).toArray()).map(({_id:s,creation:a,title:r,contents:i})=>({id:s.toJSON(),creation:new Date(a),title:r,contents:i}))}async function Le(e){let t=await S("stories");if(!t)throw new Error("Unable to get note info.");return(await t.find({_id:{$in:e.account.stories}}).toArray()).map(({_id:s,creation:a,title:r,completed:i,gems:o,members:f,threads:l})=>({id:s.toJSON(),creation:new Date(a),title:r,members:le(je({completed:i,gems:o,members:f,threads:l}),e),threads:[...i.map(h=>({...h,completed:!0})),...l.map(h=>({...h,completed:!1}))].sort((h,d)=>h.creation-d.creation).map(({creation:h,completed:d,sentences:u})=>({creation:new Date(h),completed:d,sentences:u.map(c=>c.content)}))}))}function je(e){function t(){return{gems:null,level:null,threads:{started:0,completed:0},sentences:0}}let n=Object.create(null);for(let s in e.gems)(n[s]??=t()).gems=e.gems[s]??null;for(let s in e.members)(n[s]??=t()).level=e.members[s]??null;for(let s of e.threads){let a=s.sentences[0];a&&(n[a.from]??=t()).threads.started++;for(let{from:r}of s.sentences)(n[r]??=t()).sentences++}for(let s of e.completed){let a=s.sentences[0];a&&(n[a.from]??=t()).threads.started++;let r=s.sentences[s.sentences.length-1];r&&(n[r.from]??=t()).threads.completed++;for(let{from:i}of s.sentences)(n[i]??=t()).sentences++}return n}import{ObjectId as R}from"bson";var Ee=S("accounts"),M=S("notes");async function Ie(e,t){let n=await Ee;n&&await n.updateOne({_id:t},{$push:{notes:e}})}async function I(e){let{status:t,account:n}=await A(e);if(t===0)return[];if(t===1)return[];let s=await M;return s?(await s.find({_id:{$in:n.notes}}).toArray()).map(({_id:r,title:i,contents:o})=>({id:r.toHexString(),title:i,desc:o.slice(0,80).replaceAll(`
`," ")})):[]}async function fe(e,t){let{status:n,account:s}=await A(e);if(n===0||n===1)return;let a=await M;if(!a||s.notes.length>=100)return;let r={_id:new R,contents:"<p>This is your new note!</p>",creation:Date.now(),owner:s._id,title:t};await Promise.all([a.insertOne(r),Ie(r._id,s._id)])}async function N(e,t){if(t.length!==24)return{doesOwn:!1};let{status:n,account:s}=await A(e);if(n===0)return{doesOwn:!1};if(n===1)return{doesOwn:!1};let a=await M;if(!a)return{doesOwn:!1};let r=await a.findOne({_id:R.createFromHexString(t),owner:s._id});return r?{doesOwn:!0,note:r}:{doesOwn:!1}}async function he(e,t){if(e.length!==24||t.length>1e4)return;let n=await M;n&&await n.updateOne({_id:R.createFromHexString(e)},{$set:{contents:t}})}async function ge(e,t){if(e.length!==24)return;let n=await M;n&&await n.updateOne({_id:R.createFromHexString(e)},{$set:{title:t.slice(0,100)}})}import{ObjectId as b}from"mongodb";import{randomUUID as B}from"node:crypto";var F=S("accounts"),O=S("stories");async function H(e,t){let[n,s]=await Promise.all([O,y(e)]);if(!n||!s||t.length!==24)return{permission:"none"};let a=s._id.toHexString(),r=await n.findOne({_id:b.createFromHexString(t)});if(!r)return{permission:"none"};let i=r.members[a];if(!i||i==="none")return{permission:"none"};let o=r.gems[a]||0;return{permission:i,gems:o,title:r.title,members:r.members,threads:r.threads,completed:r.completed,userGems:r.gems}}async function Z(e){let[t,n]=await Promise.all([O,y(e)]);if(!t||!n)return[];let s=n._id.toHexString();return(await t.find({_id:{$in:n.stories}}).toArray()).map(r=>({id:r._id.toHexString(),title:r.title,activeThreadCount:r.threads.length,completedThreadCount:r.completed.length,level:r.members[s]})).filter(r=>r.level&&r.level!=="none")}async function pe(e,t){let[n,s,a]=await Promise.all([O,F,y(e)]);if(!n||!s||!a)return!1;let r=a._id.toHexString();if((await n.find({members:{[r]:"manage"}}).toArray()).length>=100)return!1;let o=new b,{acknowledged:f}=await n.insertOne({completed:[],creation:Date.now(),members:{[r]:"manage"},gems:{[r]:10},threads:[],title:t,_id:o});return!(!f||!await C(e,{$push:{stories:o}}))}async function we(e,t){if(t.length!==24)return!1;let[n,s]=await Promise.all([O,y(e)]);if(!n||!s)return!1;let a=s._id.toHexString(),r=await n.findOne({_id:b.createFromHexString(t)});if(!r)return!1;let i=r.members[a];return i===void 0||i=="none"?!1:{id:t,activeThreadCount:r.threads.length,completedThreadCount:r.completed.length,completableThreadCount:r.threads.filter(o=>o.sentences.length>=20).length,gems:r.gems[a]||0,title:r.title,level:i}}async function ye(e,t,n){if(n.length<20||n.length>=1e3||t.length!==24)return!1;let[s,a]=await Promise.all([O,y(e)]);if(!a||!s)return!1;let r=b.createFromHexString(t),i=a._id.toHexString(),o=await s.findOne({_id:r});if(!o)return!1;let f=o.members[i],l=o.gems[i];if(f!="manage"&&f!="write"||l===void 0||l<10)return!1;let{acknowledged:h}=await s.updateOne({_id:r},{$push:{threads:{id:B(),creation:Date.now(),sentences:[{id:B(),from:i,content:n,username:a.username,creation:Date.now()}]}},$set:{[`gems.${i}`]:l-10}});return h?{level:f,id:t,activeThreadCount:o.threads.length+1,completableThreadCount:o.threads.filter(d=>d.sentences.length>=20).length,completedThreadCount:o.completed.length,gems:l-10,title:o.title}:!1}async function Se(e,t,n){if(t.length!==24)return{type:"ignore"};let[s,a]=await Promise.all([O,y(e)]);if(!s||!a)return{type:"ignore"};let r=a._id.toHexString(),i=await s.findOne({_id:b.createFromHexString(t)});if(!i)return{type:"ignore"};let o=i.members[r];if(o===void 0||o=="none"||o=="view")return{type:"ignore"};let f=Object.entries(i.members).filter(([,c])=>c=="manage"||c=="write").map(([c])=>c),l=Math.min(Math.ceil(f.length/2),5),h=i.threads.map(c=>{let p=1/0;for(let w=c.sentences.length-1;w>=0;w--)if(c.sentences[w].from==r){p=c.sentences.length-w;break}return{thread:c,distance:p}});if(h.length==0)return{type:"need-more-threads"};let d=h.filter(({distance:c})=>c>=l);if(d.length==0)return{type:"not-long-enough",minimumDistance:l,distanceLeft:l-Math.max(...h.map(c=>c.distance))};if(n){if(h.filter(p=>p.thread.sentences.length>=20).length==0)return{type:"need-more-completed",message:"No threads have more than 20 messages yet."};if(h.length==1)return{type:"need-more-completed",message:"Two threads need to exist before one can be completed."};if(d=d.filter(p=>p.thread.sentences.length>=20),d.length==0)return{type:"need-more-completed",message:"Even though a thread has 20 messages on it, you've commented on it too recently to be allowed to complete it."}}let u=d[Math.floor(d.length*Math.random())].thread;return{type:"ok",sentence:u.sentences[u.sentences.length-1],completability:u.sentences.length>=20?(i.gems[r]||0)>=10?"yes":"more-gems":"no"}}async function be(e,t,n,s,a){if(t.length!==24)return 0;let[r,i]=await Promise.all([O,y(e)]);if(!r||!i)return 0;let o=i._id.toHexString(),f=b.createFromHexString(t),l=await r.findOne({_id:f});if(!l)return 0;let h=l.members[o];if(h===void 0||h=="none")return 0;let d=x=>x.id==n,u=l.threads.findIndex(x=>x.sentences.find(d));if(u==-1)return 0;let c=l.threads[u];if(!c)return 0;if(c.sentences[c.sentences.length-1].id!=n)return 1;let w={id:B(),from:o,username:i.username,content:s,creation:Date.now()},g;if(a){let x=l.gems[o];if(x===void 0||x<10||l.threads.length<=1)return 0;c.sentences.push(w),{acknowledged:g}=await r.updateOne({_id:f},{$pull:{threads:{id:c.id}},$push:{completed:c},$set:{[`gems.${o}`]:(l.gems[o]||0)-10}})}else({acknowledged:g}=await r.updateOne({_id:f},{$push:{[`threads.${u}.sentences`]:w},$set:{[`gems.${o}`]:(l.gems[o]||0)+1}}));return g?{type:2,gems:(l.gems[o]||0)+1}:0}async function ve(e,t,n){if(!n||t.length!==24)return!1;let[s,a]=await Promise.all([O,y(e)]);if(!a||!s)return!1;let r=b.createFromHexString(t),i=a._id.toHexString(),o=await s.findOne({_id:r});if(!o||o.members[i]!="manage")return!1;let{acknowledged:l}=await s.updateOne({_id:r},{$set:{title:n.slice(0,100)}});return l}async function z(e){var s;let t=(s=await F)==null?void 0:s.find({_id:{$in:Object.keys(e).filter(a=>a.length===24).map(a=>b.createFromHexString(a))}});if(!t)return Object.create(null);let n=await t.toArray();return Object.fromEntries(n.map(({_id:a,username:r})=>[r,e[a.toHexString()]]).filter(a=>a[1]))}async function xe(e){var a;let t=Object.create(null);for(let r in e)t[r.toLowerCase()]=e[r];let n=(a=await F)==null?void 0:a.find({username:{$in:Object.keys(t).map(r=>new RegExp(`^${r}$`,"i"))}});if(!n)return{};let s=await n.toArray();return Object.fromEntries(s.map(({_id:r,username:i})=>[r.toHexString(),t[i.toLowerCase()]]).filter(r=>r[1]&&r[1]!="none"))}async function Oe(e,t,n){if(e.length!=24)return;let[s,a]=await Promise.all([O,F]);if(!s||!a)return;for(let o in t)n[o]===void 0&&(n[o]=10);let r,i=b.createFromHexString(e);return{acknowledged:r}=await a.updateMany({},{$pull:{stories:i}}),!r||({acknowledged:r}=await a.updateMany({_id:{$in:Object.keys(t).filter(o=>o.length===24).filter(o=>t[o]!=="none").map(o=>b.createFromHexString(o))}},{$push:{stories:i}}),!r)?!1:({acknowledged:r}=await s.updateOne({_id:b.createFromHexString(e)},{$set:{members:t,gems:n}}),r)}async function Te(e,t){if(e.length!==24||t.length!==24)return;let n=await O;if(!n)return;let{members:s}=await n.findOne({_id:b.createFromHexString(e)})||{};s&&(delete s[t],await n.updateOne({_id:b.createFromHexString(e)},{$set:{members:s}}))}async function Pe(e,t,n,s){var h;let a=await H(e,t);if(a.permission=="none")return;let r=Date.now()-{day:24*60*60*1e3,week:7*24*60*60*1e3,all:Date.now()}[n],i=Object.create(null),o=Object.create(null),f,l=0;if(s=="contributable"){let d=Object.entries(a.members).filter(([,g])=>g=="manage"||g=="write").map(([g])=>g),u=Math.min(Math.ceil(d.length/2),5),c=Object.create(null);for(let g of d)c[g]=a.threads.length;for(let g of a.threads){let x=Object.create(null);for(let{from:_}of u==1?g.sentences:g.sentences.slice(-u+1))x[_]||(c[_]-=1,x[_]=!0)}let p=await S("accounts");if(!p)return;let w=await p.find({_id:{$in:Object.keys(c).map(g=>b.createFromHexString(g))}}).map(g=>({id:g._id,username:g.username})).toArray();for(let g in c){let x=c[g],_=(h=w.find($e=>$e.id.equals(g)))==null?void 0:h.username;_&&(i[_]=x)}}else if(s=="contributions"){let d=a.threads.concat(a.completed).flatMap(u=>u.sentences).filter(u=>u.creation>=r);for(let{username:u,creation:c}of d)u in i?i[u]++:i[u]=1,u in o?o[u]=Math.max(o[u],c):o[u]=c;l=d.length}else if(s=="threads"){let d=a.threads.map(u=>({...u,completed:!1})).concat(a.completed.map(u=>({...u,completed:!0}))).filter(u=>u.creation>=r);f=[];for(let{creation:u,sentences:c,completed:p}of d){let w=c[0].username;w in i?i[w]++:i[w]=1,w in o?o[w]=Math.max(o[w],u):o[w]=u,p||f.push(c.length)}l=d.length,f.sort((u,c)=>c-u)}return{period:n,total:l,type:s,messageCounts:f,contributions:Object.entries(i).sort(([d,u],[c,p])=>p-u),last:Object.entries(o).sort(([d,u],[c,p])=>p-u)}}async function m(e,t){let{status:n,account:s}=await A(t);if(n===2){let a=s.creation+9e5;return(s.verified||!s.verified&&a>Date.now())&&(e.emit("account:update:session",s.session),e.emit("account:update:username",s.username)),s.verified?e.emit("account:needs-verification",!1):e.emit("account:needs-verification",a-Date.now()),e.data.oldSession&&e.leave(`session:${e.data.oldSession}`),e.join(`session:${e.data.oldSession=t}`),s}else return e.emit("account:update:session",""),e.emit("account:update:username",""),e.emit("account:needs-verification",!1),e.data.oldSession&&e.leave(`session:${e.data.oldSession}`),!1}var Ue="Your username should only contain letters, numbers, and underscores, and should be 6 to 20 characters long.",_e="Your password should contain a letter and number and be at least 8 characters long.",Y={"account:check-session"(e){m(this,e)},async"account:create"(e,t,n){let{status:s,account:a}=await V(e,t,n);s===2?(await m(this,a.session),this.emit("account:done:verify")):this.emit("error",{5:"Your email address is invalid. Make sure it is formatted properly and can receive emails.",4:_e,3:Ue,8:`${n} is already registered with another account.`,1:"An unknown issue occurred. Try again later.",0:"This instance of zSnout can't log in users.",7:`@${e} is already registered with another account.`}[s])},async"account:login"(e,t){let{status:n,account:s}=await Q(e,t);n===3?(await m(this,s.session),this.emit("account:done:verify")):this.emit("error",{0:"Your username or password is incorrect.",1:"This instance of zSnout can't log in users.",2:"Your username or password is incorrect."}[n])},async"account:reset-session"(e,t){let n=Ze();await U(e,{session:n});let s=this.to(`session:${e}`);s.emit("account:update:session",""),s.emit("account:update:username",""),t&&this.emit("account:update:session",this.data.oldSession=n),this.emit("account:done:reset-session")},async"account:update:username"(e,t){if(await m(this,e)){let n=await ee(e,t);n===2?(this.to(`session:${e}`).emit("account:update:username",t),this.emit("account:update:username",t),this.emit("account:done:update:username")):this.emit("error",{3:Ue,7:`@${t} is already registered with another account.`,0:"This server cannot change usernames.",1:"An unknown error occurred."}[n])}},async"account:update:password"(e,t,n){if(await m(this,e)){let s=await te(e,t,n);s===2?this.emit("account:done:update:password"):this.emit("error",{4:_e,6:"Your old password was incorrect.",0:"This server cannot change usernames.",1:"An unknown error occurred."}[s])}},async"account:request:dump"(e){if(!await m(this,e))return;let t=await de(e);this.emit("account:dump",t)},async"account:verify"(e){let{status:t,account:n}=await X(e);t===2?(await m(this,n.session),this.emit("account:done:verify")):this.emit("error",{0:"The provided verification code is invalid.",1:"This instance of zSnout can't verify accounts."}[t])},async"blog:request:will-notify"(e){var t;await m(this,e)&&this.emit("blog:update:will-notify",((t=await y(e))==null?void 0:t.willNotifyForBlog)||!1)},async"blog:update:will-notify"(e,t){await m(this,e)&&(await U(e,{willNotifyForBlog:t}),this.emit("blog:update:will-notify",t),this.to(`session-${e}`).emit("blog:update:will-notify",t),this.emit("blog:done:update:will-notify"))},async"bookmarks:request"(e){var t;if(await m(this,e)){let n=(t=await y(e))==null?void 0:t.bookmarks;n&&this.emit("bookmarks:list",n)}},async"bookmarks:update"(e,t){await m(this,e)&&await U(e,{bookmarks:t})&&t&&this.to(`session:${e}`).emit("bookmarks:list",t)},async"chat:create"(e,t){await m(this,e)&&await se(e,t)&&this.emit("chat:index",await q(e))},async"chat:leave"(e,t){if(t.length!==24)return;let n=await m(this,e);n&&await C(e,{$pull:{chats:Be.createFromHexString(t)}})&&await ue(t,n._id.toHexString())},async"chat:message:delete"(e,t,n){if(t.length!==24)return;let s=await m(this,e);s&&await ie(s.username,t,n)&&(this.to(`chat-${t}`).emit("chat:message:delete",t,n),this.emit("chat:message:delete",t,n))},async"chat:message:send"(e,t,n){if(!n)return;let s=await m(this,e);if(!s)return;let{permission:a}=await k(e,t);if(a==="manage"||a==="comment"){let r=await ae(t,s.username,n);if(!r)return;this.to(`chat-${t}`).emit("chat:message:update",t,r),this.emit("chat:message:update",t,r)}},async"chat:message:update"(e,t,n,s){if(t.length!==24)return;let a=await m(this,e);if(!a)return;let r=await me(a.username,t,n,s);r&&this.to(`chat-${t}`).emit("chat:message:update",t,r)},async"chat:request:index"(e){await m(this,e)&&this.emit("chat:index",await q(e))},async"chat:request:members"(e,t){if(await m(this,e)){let{members:n,permission:s}=await k(e,t);if(this.emit("chat:permission",t,s),s!=="manage")return;this.emit("chat:update:members",t,await E(n))}},async"chat:update:members"(e,t,n){let s=await m(this,e);if(!s)return;let{permission:a}=await k(e,t);if(this.emit("chat:permission",t,a),a!=="manage"||n[s.username]!=="manage")return;let r=await oe(n);r[s._id.toHexString()]==="manage"&&(this.emit("chat:update:members",t,await E(r)),await ce(t,r))},async"chat:update:title"(e,t,n){if(this.rooms.has(`chat-${t}`)||await m(this,e)){let{permission:s}=await k(e,t);s==="manage"&&await re(t,n)&&this.to(`chat-${t}`).emit("chat:update:title",t,n)}},async"chat:watch:start"(e,t){if(await m(this,e)){let{title:n,messages:s,permission:a}=await k(e,t);if(this.emit("chat:permission",t,a),a==="none")return;this.join(`chat-${t}`),this.emit("chat:message:list",t,s),this.emit("chat:update:title",t,n)}},async"chat:watch:stop"(e){this.leave(`chat-${e}`)},async"notes:create"(e,t){await m(this,e)?(await fe(e,t),this.emit("notes:index",await I(e))):this.emit("notes:index",[])},async"notes:request:details"(e,t){if(await m(this,e)){let{doesOwn:n,note:s}=await N(e,t);n&&this.emit("notes:details",{id:t,title:s.title})}},async"notes:request:index"(e){await m(this,e)?this.emit("notes:index",await I(e)):this.emit("notes:index",[])},async"notes:request:note"(e,t){if(await m(this,e)){let{doesOwn:n,note:s}=await N(e,t);n?this.emit("notes:note",t,s.contents):this.emit("notes:note",t,!1)}},async"notes:update:note"(e,t,n){if(await m(this,e)){let{doesOwn:s}=await N(e,t);s&&(he(t,n),this.to(`session:${e}`).emit("notes:note",t,n))}},async"notes:update:title"(e,t,n){if(await m(this,e)){let{doesOwn:s}=await N(e,t);s&&(await ge(t,n),this.to(`session:${e}`).emit("notes:details",{id:t,title:n}))}},async"story:create"(e,t){await m(this,e)&&await pe(e,t)&&this.emit("story:index",await Z(e))},async"story:create:thread"(e,t,n){if(await m(this,e)){let s=await ye(e,t,n);s&&(this.emit("story:details",s),this.emit("story:update:permission",t,s.level),this.emit("story:update:gems",t,s.gems))}},async"story:leave"(e,t){let n=await m(this,e);n&&await Te(t,n._id.toHexString())},async"story:request:completed"(e,t){if(await m(this,e)){let n=await H(e,t),s=a=>a.content;n&&n.permission!=="none"?(this.emit("story:completed",t,n.completed.map(a=>({first:a.sentences[0].content,content:a.sentences.map(s).join(" ")}))),this.emit("story:update:permission",t,n.permission),this.emit("story:update:gems",t,n.gems)):this.emit("story:update:permission",t,"none")}},async"story:request:contributables"(e,t){await m(this,e)},async"story:request:details"(e,t){if(await m(this,e)){let n=await we(e,t);n?(this.emit("story:details",n),this.emit("story:update:permission",t,n.level),this.emit("story:update:gems",t,n.gems)):this.emit("story:update:permission",t,"none")}},async"story:request:index"(e){await m(this,e)&&this.emit("story:index",await Z(e))},async"story:request:members"(e,t){if(await m(this,e)){let{members:n,permission:s}=await H(e,t);if(s!=="manage")return;this.emit("story:update:members",t,await z(n))}},async"story:request:stats"(e,t,n,s){if(await m(this,e)){let a=await Pe(e,t,n,s);a&&this.emit("story:stats",t,a)}},async"story:request:thread"(e,t,n){if(!await m(this,e))return;let s=await Se(e,t,n);switch(s.type){case"ignore":return;case"need-more-threads":this.emit("story:fail",t),this.emit("error","There aren't any threads that you can post to.");return;case"need-more-completed":this.emit("story:fail",t),this.emit("error",s.message);return;case"not-long-enough":this.emit("story:fail",t),this.emit("error",`At least ${s.minimumDistance} sentence${s.minimumDistance==1?"":"s"} need to be written before you can contribute again; ask ${s.distanceLeft} more user${s.distanceLeft==1?"":"s"} to max out their contributions.`);return;case"ok":this.emit("story:thread",t,s.sentence,s.completability)}},async"story:update:members"(e,t,n){let s=await m(this,e);if(!s)return;let{permission:a,userGems:r}=await H(e,t);if(this.emit("story:update:permission",t,a),a!=="manage"||n[s.username]!=="manage")return;let i=await xe(n);i[s._id.toHexString()]==="manage"&&(this.emit("story:update:members",t,await z(i)),await Oe(t,i,{...r}))},async"story:update:thread"(e,t,n,s,a){if(await m(this,e)){let r=await be(e,t,n,s,a);if(r===0)return;if(r===1){this.emit("story:fail",t),this.emit("error","Somebody updated this thread before you! You can always press 'Add to a Thread' again.");return}this.emit("story:done:update:thread",t),this.emit("story:update:gems",t,r.gems)}},async"story:update:title"(e,t,n){await m(this,e)&&await ve(e,t,n)},async"youtube:request"(e){try{let t=await We.getInfo(`https://youtube.com/watch?v=${e}`),n=t.videoDetails,s=t.formats;n.thumbnails.sort((r,i)=>i.height-r.height);let{url:a}=n.thumbnails.sort((r,i)=>i.width-r.width)[0];this.emit("youtube:results",e,{title:n.title,description:n.description,isLive:n.isLiveContent,channel:n.ownerChannelName,thumbnail:a,formats:s.map(({url:r,hasAudio:i,hasVideo:o,qualityLabel:f,audioQuality:l})=>({url:r,hasAudio:i,hasVideo:o,quality:f,audio:l}))})}catch{}}};Object.setPrototypeOf(Y,null);function Je(e){new Ye(e).on("connection",n=>{for(let s in Y)n.on(s,Y[s].bind(n))})}function Et(){let e=new ze;Je(e);let t=+(process.env.PORT||3e3);e.listen(Number.isSafeInteger(t)?t:3e3)}export{Je as makeIO,Et as start};
