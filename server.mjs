import{ObjectId as Fe}from"mongodb";import{randomUUID as qe}from"node:crypto";import{Server as je}from"node:http";import{Server as Ee}from"socket.io";import Ie from"ytdl-core";import{compare as De,hash as He}from"bcrypt";import{randomUUID as Q}from"node:crypto";import{MongoClient as Ce}from"mongodb";var j=process.env.ZSNOUT_DATABASE?new Ce(process.env.ZSNOUT_DATABASE,{serverApi:"1"}).connect().then(e=>(e.on("error",async()=>{await e.close(),await e.connect()}),e)).catch(e=>(console.log(e),void 0)):Promise.resolve((console.log("no database available"),void 0)),Me=j.then(e=>e==null?void 0:e.db("zsnout")).catch(e=>(console.log(e),void 0)),Ye=j.then(e=>!!e)??Promise.resolve(!1);async function y(e){var t;return(t=await Me)==null?void 0:t.collection(e)}process.on("beforeExit",()=>{j.then(e=>e==null?void 0:e.close())});y("accounts").then(e=>{e&&(e.updateMany({invites:{$exists:!1}},{$set:{invites:[]}}),e.updateMany({stories:{$exists:!1}},{$set:{stories:[]}}))}).catch(()=>{});import{createTransport as Ne}from"nodemailer";var ke={host:process.env.ZSNOUT_MAIL_HOST,port:+(process.env.ZSNOUT_MAIL_PORT||587),secure:process.env.ZSNOUT_MAIL_PORT==="465",auth:{user:process.env.ZSNOUT_MAIL_USER,pass:process.env.ZSNOUT_MAIL_PASSWORD}},Je=!!(process.env.ZSNOUT_MAIL_HOST&&process.env.ZSNOUT_MAIL_USER&&process.env.ZSNOUT_MAIL_PASSWORD),_=Ne(ke);function K(e){return new Promise(t=>{_==null||_.sendMail({...e,from:process.env.ZSNOUT_MAIL_FROM},(n,s)=>{n?(console.log(n),t(void 0)):t(s)})})}process.on("beforeExit",()=>_==null?void 0:_.close());var $;(s=>{function e(r){return r.length>=5&&r.length<=20&&/^[A-Za-z_][A-Za-z0-9_]+$/.test(r)&&!/zsnout/i.test(r)}s.Username=e;function t(r){return r.length>=8&&/(?![\d_])\w/.test(r)&&/\d/.test(r)}s.Password=t;function n(r){return/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(r)}s.Email=n})($||={});function X(e){return He(e,10)}function V(e,t){return De(e,t)}var x=y("accounts");async function ee(e,t){let n=await x;if(!n)return{status:P.NoServer};let s=await n.findOne({username:e});return s?await V(t,s.password)?{status:P.Success,account:s}:{status:P.BadPassword}:{status:P.NoUser}}var P=(r=>(r[r.BadPassword=0]="BadPassword",r[r.NoServer=1]="NoServer",r[r.NoUser=2]="NoUser",r[r.Success=3]="Success",r))(P||{});async function M(e){let t=await x;if(!t)return{status:C.NoServer};let n=await t.findOne({session:e});return n?{status:C.Success,account:n}:{status:C.Failure}}var C=(s=>(s[s.Failure=0]="Failure",s[s.NoServer=1]="NoServer",s[s.Success=2]="Success",s))(C||{});async function te(e,t,n){let s=await x;if(!s)return{status:v.NoServer};if(!$.Username(e))return{status:v.BadUsername};if(!$.Password(t))return{status:v.BadPassword};if(!$.Email(n))return{status:v.BadEmail};if(await s.findOne({username:e}))return{status:v.UsernameTaken};if(await s.findOne({email:n}))return{status:v.EmailTaken};let r={username:e,password:await X(t),email:n,creation:Date.now(),session:Q(),verified:!1,verifyCode:Q(),bookmarks:[],notes:[],chats:[],invites:[],stories:[],willNotifyForBlog:!0};return(await s.insertOne(r)).acknowledged?await K({to:n,subject:"Verify your zSnout account",text:`Hey @${e}! Verify your new zSnout account by opening this link: https://zsnout.com/verify-account?code=${r.verifyCode}.`})?{status:v.Success,account:r}:(await s.deleteOne({session:r.session}),{status:v.BadEmail}):{status:v.Failure}}var v=(c=>(c[c.NoServer=0]="NoServer",c[c.Failure=1]="Failure",c[c.Success=2]="Success",c[c.BadUsername=3]="BadUsername",c[c.BadPassword=4]="BadPassword",c[c.BadEmail=5]="BadEmail",c[c.IncorrectPassword=6]="IncorrectPassword",c[c.UsernameTaken=7]="UsernameTaken",c[c.EmailTaken=8]="EmailTaken",c))(v||{});async function ne(e){let t=await x;if(!t)return{status:k.NoServer};let n=await t.findOneAndUpdate({verifyCode:e},{$set:{verified:!0}});return n.value?{status:k.Success,account:n.value}:{status:k.NoAccount}}var k=(s=>(s[s.NoAccount=0]="NoAccount",s[s.NoServer=1]="NoServer",s[s.Success=2]="Success",s))(k||{});async function Re(){let e=await x;await(e==null?void 0:e.deleteMany({verified:!1,creation:{$lte:Date.now()-15*60*1e3}}))}async function f(e){var t;return await((t=await x)==null?void 0:t.findOne({session:e}))||void 0}async function D(e,t){var n,s;return((s=await((n=await x)==null?void 0:n.updateOne({session:e},t)))==null?void 0:s.acknowledged)||!1}async function T(e,t){return D(e,{$set:t})}async function se(e,t){let n=await x;return n?$.Username(t)?await n.findOne({username:t})?7:await T(e,{username:t})?2:1:3:0}async function re(e,t,n){if(!await x)return 0;if(!$.Password(n))return 4;let r=await f(e);return r?await V(t,r.password)?await T(e,{password:await X(n)})?2:1:6:1}setInterval(Re,5*60*1e3);import{ObjectId as S}from"mongodb";import{randomUUID as ae}from"node:crypto";var E=y("accounts"),O=y("chats");async function I(e){let[t,n]=await Promise.all([O,f(e)]);if(!t||!n)return[];let s=n._id.toHexString();return(await t.find({_id:{$in:n.chats}}).toArray()).map(a=>({id:a._id.toHexString(),level:a.members[s],title:a.title})).filter(a=>a.level&&a.level!=="none")}async function ie(e,t){let[n,s]=await Promise.all([O,f(e)]);if(!n||!s)return!1;let r=new S;if(!await T(e,{chats:s.chats.concat(r)}))return!1;let{acknowledged:a}=await n.insertOne({_id:r,creation:Date.now(),members:{[s._id.toHexString()]:"manage"},messages:[{content:`Welcome to your new chat, ${s.username}!`,from:"zSnout",id:ae(),timestamp:Date.now()}],title:t.slice(0,100),defaultLevel:"none"});return a}async function N(e,t){if(t.length!==24)return{permission:"none"};let[n,s]=await Promise.all([O,f(e)]);if(!n||!s)return{permission:"none"};let r=s._id.toHexString(),a=await n.findOne({_id:S.createFromHexString(t)});if(!a)return{permission:"none"};let i=a.members[r]||a.defaultLevel;return!i||i==="none"?{permission:"none"}:{permission:i,messages:a.messages,title:a.title,members:a.members}}async function oe(e,t){if(e.length!==24)return!1;let n=await O;if(!n)return!1;let{acknowledged:s}=await n.updateOne({_id:S.createFromHexString(e)},{$set:{title:t.slice(0,100)}});return s}async function ce(e,t,n){if(e.length!==24)return!1;let s=await O;if(!s)return!1;let r={content:n.slice(0,1e3),id:ae(),timestamp:Date.now(),from:t},{acknowledged:a}=await s.updateOne({_id:S.createFromHexString(e)},{$push:{messages:r}});return a?r:!1}async function ue(e,t,n){if(t.length!==24)return!1;let s=await O;if(!s)return!1;let{acknowledged:r}=await s.updateOne({_id:S.createFromHexString(t)},{$pull:{messages:{id:n,from:e}}});return r}async function B(e){var s;let t=(s=await E)==null?void 0:s.find({_id:{$in:Object.keys(e).filter(r=>r.length===24).map(r=>S.createFromHexString(r))}});if(!t)return Object.create(null);let n=await t.toArray();return Object.fromEntries(n.map(({_id:r,username:a})=>[a,e[r.toHexString()]]).filter(r=>r[1]))}async function me(e){var r;let t=Object.create(null);for(let a in e)t[a.toLowerCase()]=e[a];let n=(r=await E)==null?void 0:r.find({username:{$in:Object.keys(t).map(a=>new RegExp(`^${a}$`,"i"))}});if(!n)return{};let s=await n.toArray();return Object.fromEntries(s.map(({_id:a,username:i})=>[a.toHexString(),t[i.toLowerCase()]]).filter(a=>a[1]))}async function le(e,t){if(e.length!==24)return!1;for(let i in t)if(i.length!==24)return!1;let[n,s]=await Promise.all([E,O]);if(!n||!s)return!1;let r=S.createFromHexString(e),a;return{acknowledged:a}=await n.updateMany({},{$pull:{chats:r}}),!a||({acknowledged:a}=await n.updateMany({_id:{$in:Object.keys(t).filter(i=>i.length===24).filter(i=>t[i]!=="none").map(i=>S.createFromHexString(i))}},{$push:{chats:r}}),!a)?!1:({acknowledged:a}=await s.updateOne({_id:r},{$set:{members:t}}),a)}async function de(e,t){if(e.length!==24||t.length!==24)return;let n=await O;if(!n)return;let{members:s}=await n.findOne({_id:S.createFromHexString(e)})||{};s&&(delete s[t],await n.updateOne({_id:S.createFromHexString(e)},{$set:{members:s}}))}async function fe(e,t,n,s){if(t.length!==24)return;let r=await O;if(!r)return;let{messages:a}=await r.findOne({_id:S.createFromHexString(t)})||{};if(!a)return;let i=a.find(({id:d})=>d===n);if(!i||i.from!==e)return;i.content=s;let{acknowledged:o}=await r.updateOne({_id:S.createFromHexString(t)},{$set:{messages:a}});if(o)return i}import{ObjectId as A}from"bson";var Le=y("accounts"),H=y("notes");async function Ae(e,t){let n=await Le;n&&await n.updateOne({_id:t},{$push:{notes:e}})}async function Z(e){let{status:t,account:n}=await M(e);if(t===0)return[];if(t===1)return[];let s=await H;return s?(await s.find({_id:{$in:n.notes}}).toArray()).map(({_id:a,title:i,contents:o})=>({id:a.toHexString(),title:i,desc:o.slice(0,80).replaceAll(`
`," ")})):[]}async function ge(e,t){let{status:n,account:s}=await M(e);if(n===0||n===1)return;let r=await H;if(!r||s.notes.length>=100)return;let a={_id:new A,contents:"<p>This is your new note!</p>",creation:Date.now(),owner:s._id,title:t};await Promise.all([r.insertOne(a),Ae(a._id,s._id)])}async function R(e,t){if(t.length!==24)return{doesOwn:!1};let{status:n,account:s}=await M(e);if(n===0)return{doesOwn:!1};if(n===1)return{doesOwn:!1};let r=await H;if(!r)return{doesOwn:!1};let a=await r.findOne({_id:A.createFromHexString(t),owner:s._id});return a?{doesOwn:!0,note:a}:{doesOwn:!1}}async function he(e,t){if(e.length!==24||t.length>1e4)return;let n=await H;n&&await n.updateOne({_id:A.createFromHexString(e)},{$set:{contents:t}})}async function pe(e,t){if(e.length!==24)return;let n=await H;n&&await n.updateOne({_id:A.createFromHexString(e)},{$set:{title:t.slice(0,100)}})}import{ObjectId as w}from"mongodb";import{randomUUID as z}from"node:crypto";var F=y("accounts"),b=y("stories");async function L(e,t){let[n,s]=await Promise.all([b,f(e)]);if(!n||!s||t.length!==24)return{permission:"none"};let r=s._id.toHexString(),a=await n.findOne({_id:w.createFromHexString(t)});if(!a)return{permission:"none"};let i=a.members[r];if(!i||i==="none")return{permission:"none"};let o=a.gems[r]||0;return{permission:i,gems:o,title:a.title,members:a.members,threads:a.threads,completed:a.completed,userGems:a.gems}}async function Y(e){let[t,n]=await Promise.all([b,f(e)]);if(!t||!n)return[];let s=n._id.toHexString();return(await t.find({_id:{$in:n.stories}}).toArray()).map(a=>({id:a._id.toHexString(),title:a.title,activeThreadCount:a.threads.length,completedThreadCount:a.completed.length,level:a.members[s]})).filter(a=>a.level&&a.level!=="none")}async function we(e,t){let[n,s,r]=await Promise.all([b,F,f(e)]);if(!n||!s||!r)return!1;let a=r._id.toHexString();if((await n.find({members:{[a]:"manage"}}).toArray()).length>=100)return!1;let o=new w,{acknowledged:d}=await n.insertOne({completed:[],creation:Date.now(),members:{[a]:"manage"},gems:{[a]:10},threads:[],title:t,_id:o});return!(!d||!await D(e,{$push:{stories:o}}))}async function ye(e,t){if(t.length!==24)return!1;let[n,s]=await Promise.all([b,f(e)]);if(!n||!s)return!1;let r=s._id.toHexString(),a=await n.findOne({_id:w.createFromHexString(t)});if(!a)return!1;let i=a.members[r];return i===void 0||i=="none"?!1:{id:t,activeThreadCount:a.threads.length,completedThreadCount:a.completed.length,completableThreadCount:a.threads.filter(o=>o.sentences.length>=20).length,gems:a.gems[r]||0,title:a.title,level:i}}async function Se(e,t,n){if(n.length<20||n.length>=1e3||t.length!==24)return!1;let[s,r]=await Promise.all([b,f(e)]);if(!r||!s)return!1;let a=w.createFromHexString(t),i=r._id.toHexString(),o=await s.findOne({_id:a});if(!o)return!1;let d=o.members[i],c=o.gems[i];if(d!="manage"&&d!="write"||c===void 0||c<10)return!1;let{acknowledged:g}=await s.updateOne({_id:a},{$push:{threads:{id:z(),creation:Date.now(),sentences:[{id:z(),from:i,content:n,username:r.username,creation:Date.now()}]}},$set:{[`gems.${i}`]:c-10}});return g?{level:d,id:t,activeThreadCount:o.threads.length+1,completableThreadCount:o.threads.filter(m=>m.sentences.length>=20).length,completedThreadCount:o.completed.length,gems:c-10,title:o.title}:!1}async function ve(e,t,n){var m;if(t.length!==24)return 0;let[s,r]=await Promise.all([b,f(e)]);if(!s||!r)return 0;let a=r._id.toHexString(),i=await s.findOne({_id:w.createFromHexString(t)});if(!i)return 0;let o=i.members[a];if(o===void 0||o=="none")return 0;let d=Math.min(Math.ceil(Object.keys(i.members).length/2),5),c=i.threads.map(l=>{let h=1/0;for(let p=l.sentences.length-1;p>=0;p--)if(l.sentences[p].from==a){h=l.sentences.length-p;break}return{thread:l,distance:h}}).filter(({distance:l})=>l>=d);if(n&&(c=c.filter(l=>l.thread.sentences.length>=20),c.length<=1))return 1;let g=(m=c[Math.floor(c.length*Math.random())])==null?void 0:m.thread;return g?g.sentences[g.sentences.length-1]:1}async function be(e,t,n,s,r){if(t.length!==24)return 0;let[a,i]=await Promise.all([b,f(e)]);if(!a||!i)return 0;let o=i._id.toHexString(),d=w.createFromHexString(t),c=await a.findOne({_id:d});if(!c)return 0;let g=c.members[o];if(g===void 0||g=="none")return 0;let m=U=>U.id==n,l=c.threads.findIndex(U=>U.sentences.find(m));if(l==-1)return 0;let h=c.threads[l];if(!h)return 0;if(h.sentences[h.sentences.length-1].id!=n)return 1;let J={id:z(),from:o,username:i.username,content:s,creation:Date.now()},q;if(r){let U=c.gems[o];if(U===void 0||U<10||c.threads.length<=1)return 0;h.sentences.push(J),{acknowledged:q}=await a.updateOne({_id:d},{$pull:{threads:{id:h.id}},$push:{completed:h},$set:{[`gems.${o}`]:(c.gems[o]||0)-10}})}else({acknowledged:q}=await a.updateOne({_id:d},{$push:{[`threads.${l}.sentences`]:J},$set:{[`gems.${o}`]:(c.gems[o]||0)+1}}));return q?{type:2,gems:(c.gems[o]||0)+1}:0}async function xe(e,t,n){if(!n||t.length!==24)return!1;let[s,r]=await Promise.all([b,f(e)]);if(!r||!s)return!1;let a=w.createFromHexString(t),i=r._id.toHexString(),o=await s.findOne({_id:a});if(!o||o.members[i]!="manage")return!1;let{acknowledged:c}=await s.updateOne({_id:a},{$set:{title:n.slice(0,100)}});return c}async function W(e){var s;let t=(s=await F)==null?void 0:s.find({_id:{$in:Object.keys(e).filter(r=>r.length===24).map(r=>w.createFromHexString(r))}});if(!t)return Object.create(null);let n=await t.toArray();return Object.fromEntries(n.map(({_id:r,username:a})=>[a,e[r.toHexString()]]).filter(r=>r[1]))}async function Oe(e){var r;let t=Object.create(null);for(let a in e)t[a.toLowerCase()]=e[a];let n=(r=await F)==null?void 0:r.find({username:{$in:Object.keys(t).map(a=>new RegExp(`^${a}$`,"i"))}});if(!n)return{};let s=await n.toArray();return Object.fromEntries(s.map(({_id:a,username:i})=>[a.toHexString(),t[i.toLowerCase()]]).filter(a=>a[1]&&a[1]!="none"))}async function Te(e,t,n){if(e.length!=24)return;let[s,r]=await Promise.all([b,F]);if(!s||!r)return;for(let o in t)n[o]===void 0&&(n[o]=10);let a,i=w.createFromHexString(e);return{acknowledged:a}=await r.updateMany({},{$pull:{stories:i}}),!a||({acknowledged:a}=await r.updateMany({_id:{$in:Object.keys(t).filter(o=>o.length===24).filter(o=>t[o]!=="none").map(o=>w.createFromHexString(o))}},{$push:{stories:i}}),!a)?!1:({acknowledged:a}=await s.updateOne({_id:w.createFromHexString(e)},{$set:{members:t,gems:n}}),a)}async function Ue(e,t){if(e.length!==24||t.length!==24)return;let n=await b;if(!n)return;let{members:s}=await n.findOne({_id:w.createFromHexString(e)})||{};s&&(delete s[t],await n.updateOne({_id:w.createFromHexString(e)},{$set:{members:s}}))}async function _e(e,t,n,s){let r=await L(e,t);if(r.permission=="none")return;let a=Date.now()-{day:24*60*60*1e3,week:7*24*60*60*1e3,all:Date.now()}[n],i=Object.create(null),o=Object.create(null),d,c=0;if(s=="contributions"){let g=r.threads.concat(r.completed).flatMap(m=>m.sentences).filter(m=>m.creation>=a);for(let{username:m,creation:l}of g)m in i?i[m]++:i[m]=1,m in o?o[m]=Math.max(o[m],l):o[m]=l;c=g.length}else if(s=="threads"){let g=r.threads.map(m=>({...m,completed:!1})).concat(r.completed.map(m=>({...m,completed:!0}))).filter(m=>m.creation>=a);d=[];for(let{creation:m,sentences:l,completed:h}of g){let p=l[0].username;p in i?i[p]++:i[p]=1,p in o?o[p]=Math.max(o[p],m):o[p]=m,h||d.push(l.length)}c=g.length,d.sort((m,l)=>l-m)}return{period:n,total:c,type:s,messageCounts:d,contributions:Object.entries(i).sort(([g,m],[l,h])=>h-m),last:Object.entries(o).sort(([g,m],[l,h])=>h-m)}}async function u(e,t){let{status:n,account:s}=await M(t);if(n===2){let r=s.creation+9e5;return(s.verified||!s.verified&&r>Date.now())&&(e.emit("account:update:session",s.session),e.emit("account:update:username",s.username)),s.verified?e.emit("account:needs-verification",!1):e.emit("account:needs-verification",r-Date.now()),e.data.oldSession&&e.leave(`session:${e.data.oldSession}`),e.join(`session:${e.data.oldSession=t}`),s}else return e.emit("account:update:session",""),e.emit("account:update:username",""),e.emit("account:needs-verification",!1),e.data.oldSession&&e.leave(`session:${e.data.oldSession}`),!1}var Pe="Your username should only contain letters, numbers, and underscores, and should be 6 to 20 characters long.",$e="Your password should contain a letter and number and be at least 8 characters long.",G={"account:check-session"(e){u(this,e)},async"account:create"(e,t,n){let{status:s,account:r}=await te(e,t,n);s===2?(await u(this,r.session),this.emit("account:done:verify")):this.emit("error",{[5]:"Your email address is invalid. Make sure it is formatted properly and can receive emails.",[4]:$e,[3]:Pe,[8]:`${n} is already registered with another account.`,[1]:"An unknown issue occurred. Try again later.",[0]:"This instance of zSnout can't log in users.",[7]:`@${e} is already registered with another account.`}[s])},async"account:login"(e,t){let{status:n,account:s}=await ee(e,t);n===3?(await u(this,s.session),this.emit("account:done:verify")):this.emit("error",{[0]:"Your username or password is incorrect.",[1]:"This instance of zSnout can't log in users.",[2]:"Your username or password is incorrect."}[n])},async"account:reset-session"(e,t){let n=qe();await T(e,{session:n});let s=this.to(`session:${e}`);s.emit("account:update:session",""),s.emit("account:update:username",""),t&&this.emit("account:update:session",this.data.oldSession=n),this.emit("account:done:reset-session")},async"account:update:username"(e,t){if(await u(this,e)){let n=await se(e,t);n===2?(this.to(`session:${e}`).emit("account:update:username",t),this.emit("account:update:username",t),this.emit("account:done:update:username")):this.emit("error",{[3]:Pe,[7]:`@${t} is already registered with another account.`,[0]:"This server cannot change usernames.",[1]:"An unknown error occurred."}[n])}},async"account:update:password"(e,t,n){if(await u(this,e)){let s=await re(e,t,n);s===2?this.emit("account:done:update:password"):this.emit("error",{[4]:$e,[6]:"Your old password was incorrect.",[0]:"This server cannot change usernames.",[1]:"An unknown error occurred."}[s])}},async"account:verify"(e){let{status:t,account:n}=await ne(e);t===2?(await u(this,n.session),this.emit("account:done:verify")):this.emit("error",{[0]:"The provided verification code is invalid.",[1]:"This instance of zSnout can't verify accounts."}[t])},async"blog:request:will-notify"(e){var t;await u(this,e)&&this.emit("blog:update:will-notify",((t=await f(e))==null?void 0:t.willNotifyForBlog)||!1)},async"blog:update:will-notify"(e,t){await u(this,e)&&(await T(e,{willNotifyForBlog:t}),this.emit("blog:update:will-notify",t),this.to(`session-${e}`).emit("blog:update:will-notify",t),this.emit("blog:done:update:will-notify"))},async"bookmarks:request"(e){var t;if(await u(this,e)){let n=(t=await f(e))==null?void 0:t.bookmarks;n&&this.emit("bookmarks:list",n)}},async"bookmarks:update"(e,t){await u(this,e)&&await T(e,{bookmarks:t})&&t&&this.to(`session:${e}`).emit("bookmarks:list",t)},async"chat:create"(e,t){await u(this,e)&&await ie(e,t)&&this.emit("chat:index",await I(e))},async"chat:leave"(e,t){if(t.length!==24)return;let n=await u(this,e);n&&await D(e,{$pull:{chats:Fe.createFromHexString(t)}})&&await de(t,n._id.toHexString())},async"chat:message:delete"(e,t,n){if(t.length!==24)return;let s=await u(this,e);s&&await ue(s.username,t,n)&&(this.to(`chat-${t}`).emit("chat:message:delete",t,n),this.emit("chat:message:delete",t,n))},async"chat:message:send"(e,t,n){if(!n)return;let s=await u(this,e);if(!s)return;let{permission:r}=await N(e,t);if(r==="manage"||r==="comment"){let a=await ce(t,s.username,n);if(!a)return;this.to(`chat-${t}`).emit("chat:message:update",t,a),this.emit("chat:message:update",t,a)}},async"chat:message:update"(e,t,n,s){if(t.length!==24)return;let r=await u(this,e);if(!r)return;let a=await fe(r.username,t,n,s);a&&this.to(`chat-${t}`).emit("chat:message:update",t,a)},async"chat:request:index"(e){await u(this,e)&&this.emit("chat:index",await I(e))},async"chat:request:members"(e,t){if(await u(this,e)){let{members:n,permission:s}=await N(e,t);if(this.emit("chat:permission",t,s),s!=="manage")return;this.emit("chat:update:members",t,await B(n))}},async"chat:update:members"(e,t,n){let s=await u(this,e);if(!s)return;let{permission:r}=await N(e,t);if(this.emit("chat:permission",t,r),r!=="manage"||n[s.username]!=="manage")return;let a=await me(n);a[s._id.toHexString()]==="manage"&&(this.emit("chat:update:members",t,await B(a)),await le(t,a))},async"chat:update:title"(e,t,n){if(this.rooms.has(`chat-${t}`)||await u(this,e)){let{permission:s}=await N(e,t);s==="manage"&&await oe(t,n)&&this.to(`chat-${t}`).emit("chat:update:title",t,n)}},async"chat:watch:start"(e,t){if(await u(this,e)){let{title:n,messages:s,permission:r}=await N(e,t);if(this.emit("chat:permission",t,r),r==="none")return;this.join(`chat-${t}`),this.emit("chat:message:list",t,s),this.emit("chat:update:title",t,n)}},async"chat:watch:stop"(e){this.leave(`chat-${e}`)},async"notes:create"(e,t){await u(this,e)?(await ge(e,t),this.emit("notes:index",await Z(e))):this.emit("notes:index",[])},async"notes:request:details"(e,t){if(await u(this,e)){let{doesOwn:n,note:s}=await R(e,t);n&&this.emit("notes:details",{id:t,title:s.title})}},async"notes:request:index"(e){await u(this,e)?this.emit("notes:index",await Z(e)):this.emit("notes:index",[])},async"notes:request:note"(e,t){if(await u(this,e)){let{doesOwn:n,note:s}=await R(e,t);n?this.emit("notes:note",t,s.contents):this.emit("notes:note",t,!1)}},async"notes:update:note"(e,t,n){if(await u(this,e)){let{doesOwn:s}=await R(e,t);s&&(he(t,n),this.to(`session:${e}`).emit("notes:note",t,n))}},async"notes:update:title"(e,t,n){if(await u(this,e)){let{doesOwn:s}=await R(e,t);s&&(await pe(t,n),this.to(`session:${e}`).emit("notes:details",{id:t,title:n}))}},async"story:create"(e,t){await u(this,e)&&await we(e,t)&&this.emit("story:index",await Y(e))},async"story:create:thread"(e,t,n){if(await u(this,e)){let s=await Se(e,t,n);s&&(this.emit("story:details",s),this.emit("story:update:permission",t,s.level),this.emit("story:update:gems",t,s.gems))}},async"story:leave"(e,t){let n=await u(this,e);n&&await Ue(t,n._id.toHexString())},async"story:request:completed"(e,t){if(await u(this,e)){let n=await L(e,t),s=r=>r.content;n&&n.permission!=="none"?(this.emit("story:completed",t,n.completed.map(r=>({first:r.sentences[0].content,content:r.sentences.map(s).join(" ")}))),this.emit("story:update:permission",t,n.permission),this.emit("story:update:gems",t,n.gems)):this.emit("story:update:permission",t,"none")}},async"story:request:details"(e,t){if(await u(this,e)){let n=await ye(e,t);n?(this.emit("story:details",n),this.emit("story:update:permission",t,n.level),this.emit("story:update:gems",t,n.gems)):this.emit("story:update:permission",t,"none")}},async"story:request:index"(e){await u(this,e)&&this.emit("story:index",await Y(e))},async"story:request:members"(e,t){if(await u(this,e)){let{members:n,permission:s}=await L(e,t);if(s!=="manage")return;this.emit("story:update:members",t,await W(n))}},async"story:request:stats"(e,t,n,s){if(await u(this,e)){let r=await _e(e,t,n,s);r&&this.emit("story:stats",t,r)}},async"story:request:thread"(e,t,n){if(await u(this,e)){let s=await ve(e,t,n);if(s===0)return;if(s===1){this.emit("story:fail",t),this.emit("error","Other users need to contribute to this story's threads before you can add another sentence.");return}this.emit("story:thread",t,s)}},async"story:update:members"(e,t,n){let s=await u(this,e);if(!s)return;let{permission:r,userGems:a}=await L(e,t);if(this.emit("story:update:permission",t,r),r!=="manage"||n[s.username]!=="manage")return;let i=await Oe(n);i[s._id.toHexString()]==="manage"&&(this.emit("story:update:members",t,await W(i)),await Te(t,i,{...a}))},async"story:update:thread"(e,t,n,s,r){if(await u(this,e)){let a=await be(e,t,n,s,r);if(a===0)return;if(a===1){this.emit("story:fail",t),this.emit("error","Somebody updated this thread before you! You can always press 'Add to a Thread' again.");return}this.emit("story:done:update:thread",t),this.emit("story:update:gems",t,a.gems)}},async"story:update:title"(e,t,n){await u(this,e)&&await xe(e,t,n)},async"youtube:request"(e){try{let t=await Ie.getInfo(`https://youtube.com/watch?v=${e}`),n=t.videoDetails,s=t.formats;n.thumbnails.sort((a,i)=>i.height-a.height);let{url:r}=n.thumbnails.sort((a,i)=>i.width-a.width)[0];this.emit("youtube:results",e,{title:n.title,description:n.description,isLive:n.isLiveContent,channel:n.ownerChannelName,thumbnail:r,formats:s.map(({url:a,hasAudio:i,hasVideo:o,qualityLabel:d,audioQuality:c})=>({url:a,hasAudio:i,hasVideo:o,quality:d,audio:c}))})}catch{}}};Object.setPrototypeOf(G,null);function Be(e){new Ee(e).on("connection",n=>{for(let s in G)n.on(s,G[s].bind(n))})}function Ct(){let e=new je;Be(e);let t=+(process.env.PORT||3e3);e.listen(Number.isSafeInteger(t)?t:3e3)}export{Be as makeIO,Ct as start};
