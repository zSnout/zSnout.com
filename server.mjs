import{readFile as Y}from"node:fs";import{Server as q}from"node:http";import{Server as W}from"socket.io";import{compare as E,hash as j}from"bcrypt";import{randomUUID as b}from"crypto";import{MongoClient as D}from"mongodb";var O=process.env.ZSNOUT_DATABASE?new D(process.env.ZSNOUT_DATABASE,{serverApi:"1"}).connect().then(e=>(e.on("error",async()=>{await e.close(),await e.connect()}),e)).catch(e=>(console.log(e),void 0)):Promise.resolve((console.log("no database available"),void 0)),z=O.then(e=>e==null?void 0:e.db("zsnout")).catch(e=>(console.log(e),void 0)),Q=O.then(e=>!!e)??Promise.resolve(!1);async function w(e){var t;return(t=await z)==null?void 0:t.collection(e)}process.on("beforeExit",()=>{O.then(e=>e==null?void 0:e.close())});import{createTransport as B}from"nodemailer";var C={host:process.env.ZSNOUT_MAIL_HOST,port:+(process.env.ZSNOUT_MAIL_PORT||587),secure:process.env.ZSNOUT_MAIL_PORT==="465",auth:{user:process.env.ZSNOUT_MAIL_USER,pass:process.env.ZSNOUT_MAIL_PASSWORD}},ee=!!(process.env.ZSNOUT_MAIL_HOST&&process.env.ZSNOUT_MAIL_USER&&process.env.ZSNOUT_MAIL_PASSWORD),d=B(C);function x(e){return new Promise(t=>{d==null||d.sendMail({...e,from:process.env.ZSNOUT_MAIL_FROM},(s,n)=>{s?(console.log(s),t(void 0)):t(n)})})}process.on("beforeExit",()=>d==null?void 0:d.close());var v;(n=>{function e(o){return o.length>=5&&o.length<=20&&/^[A-Za-z_][A-Za-z0-9_]+$/.test(o)&&!/zsnout/i.test(o)}n.Username=e;function t(o){return o.length>=8&&/(?![\d_])\w/.test(o)&&/\d/.test(o)&&/[^\s\w]/.test(o)}n.Password=t;function s(o){return/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(o)}n.Email=s})(v||={});function F(e){return j(e,10)}function H(e,t){return E(e,t)}var u=w("accounts");async function _(e,t){let s=await u;if(!s)return{status:f.NoServer};let n=await s.findOne({username:e});return n?await H(t,n.password)?{status:f.Success,account:n}:{status:f.BadPassword}:{status:f.NoUser}}var f=(o=>(o[o.BadPassword=0]="BadPassword",o[o.NoServer=1]="NoServer",o[o.NoUser=2]="NoUser",o[o.Success=3]="Success",o))(f||{});async function m(e){let t=await u;if(!t)return{status:l.NoServer};let s=await t.findOne({session:e});return s?{status:l.Success,account:s}:{status:l.Failure}}var l=(n=>(n[n.Failure=0]="Failure",n[n.NoServer=1]="NoServer",n[n.Success=2]="Success",n))(l||{});async function P(e,t,s){let n=await u;if(!n)return{status:i.NoServer};if(!v.Username(e))return{status:i.BadUsername};if(!v.Password(t))return{status:i.BadPassword};if(!v.Email(s))return{status:i.BadEmail};if(await k(),await n.findOne({username:e}))return{status:i.UsernameTaken};if(await n.findOne({email:s}))return{status:i.EmailTaken};let o={username:e,password:await F(t),email:s,creation:Date.now(),session:b(),verified:!1,verifyCode:b(),bookmarks:[],favoriteNotes:[],notes:[],favoriteChats:[],chats:[]};return(await n.insertOne(o)).acknowledged?await x({to:s,subject:"Verify your zSnout account",text:`Hey @${e}! Verify your new zSnout account by opening this link: https://zsnout.com/account/verify?code=${o.verifyCode}.`})?{status:i.Success,account:o}:(await n.deleteOne({session:o.session}),{status:i.BadEmail}):{status:i.Failure}}var i=(a=>(a[a.BadUsername=0]="BadUsername",a[a.BadPassword=1]="BadPassword",a[a.BadEmail=2]="BadEmail",a[a.EmailTaken=3]="EmailTaken",a[a.Failure=4]="Failure",a[a.NoServer=5]="NoServer",a[a.Success=6]="Success",a[a.UsernameTaken=7]="UsernameTaken",a))(i||{});async function U(e){let t=await u;if(!t)return{status:p.NoServer};let s=await t.findOneAndUpdate({verifyCode:e},{$set:{verified:!0}});return s.value?{status:p.Success,account:s.value}:{status:p.NoAccount}}var p=(n=>(n[n.NoAccount=0]="NoAccount",n[n.NoServer=1]="NoServer",n[n.Success=2]="Success",n))(p||{});async function k(){let e=await u;await(e==null?void 0:e.deleteMany({verified:!1,creation:{$lte:Date.now()-15*60*1e3}}))}async function I(e){var t;return await((t=await u)==null?void 0:t.findOne({session:e}))||void 0}async function M(e,t){var s,n;return(n=await((s=await u)==null?void 0:s.updateOne({session:e},{$set:t})))==null?void 0:n.acknowledged}setInterval(k,5*60*1e3);import{ObjectId as y}from"bson/lib/bson.js";var L=w("accounts"),g=w("notes");async function R(e,t){let s=await L;!s||await s.updateOne({_id:t},{$push:{notes:e}})}async function h(e){let{status:t,account:s}=await m(e);if(t===0)return[];if(t===1)return[];let n=await g;return n?(await n.find({_id:{$in:s.notes}}).toArray()).map(({_id:r,title:N,contents:$})=>({id:r.toHexString(),title:N,desc:$.slice(0,80).replaceAll(`
`," ")})):[]}async function Z(e,t){let{status:s,account:n}=await m(e);if(s===0||s===1)return;let o=await g;if(!o)return;let r={_id:new y,contents:"This is your new note!",creation:Date.now(),owner:n._id,title:t};await Promise.all([o.insertOne(r),R(r._id,n._id)])}async function S(e,t){let{status:s,account:n}=await m(e);if(s===0)return{doesOwn:!1};if(s===1)return{doesOwn:!1};let o=await g;if(!o)return{doesOwn:!1};let r=await o.findOne({_id:y.createFromHexString(t),owner:n._id});return r?{doesOwn:!0,note:r}:{doesOwn:!1}}async function A(e,t){let s=await g;!s||await s.updateOne({_id:y.createFromHexString(e)},{$set:{contents:t}})}async function c(e,t){let{status:s,account:n}=await m(t);if(s===2){let o=n.creation+9e5;return(n.verified||!n.verified&&o>Date.now())&&(e.emit("account:update:session",n.session),e.emit("account:update:username",n.username)),n.verified?e.emit("account:needs-verification",!1):e.emit("account:needs-verification",o-Date.now()),e.data.oldSession&&e.leave(`session:${e.data.oldSession}`),e.join(`session:${e.data.oldSession=t}`),!0}else return e.emit("account:update:session",""),e.emit("account:update:username",""),e.emit("account:needs-verification",!1),e.data.oldSession&&e.leave(`session:${e.data.oldSession}`),!1}var T={"account:check-session"(e){c(this,e)},async"account:create"(e,t,s){let{status:n,account:o}=await P(e,t,s);n===6?(await c(this,o.session),this.emit("account:complete-login")):this.emit("error",{[2]:"Your email address is invalid. Make sure it is formatted properly and can recieve emails.",[1]:"Your password should have a letter, number, symbol, and be at least 8 characters long.",[0]:"Your username should only contain letters, numbers, and underscores, and should be at least 6 characters long.",[3]:`${s} is already registered with another account.`,[4]:"An unknown issue occurred. Try again later.",[5]:"This instance of zSnout can't log in users.",[7]:`@${e} is already registered with another account.`}[n])},async"account:login"(e,t){let{status:s,account:n}=await _(e,t);s===3?(await c(this,n.session),this.emit("account:complete-login")):this.emit("error",{[0]:"Your username or password is incorrect.",[1]:"This instance of zSnout can't log in users.",[2]:"Your username or password is incorrect."}[s])},async"account:verify"(e){let{status:t,account:s}=await U(e);t===2?(await c(this,s.session),this.emit("account:complete-login")):this.emit("error",{[0]:"The provided verification code is invalid.",[1]:"This instance of zSnout can't verify accounts."}[t])},async"bookmarks:request"(e){var t;if(await c(this,e)){let s=(t=await I(e))==null?void 0:t.bookmarks;s&&this.emit("bookmarks:list",s)}},async"bookmarks:update"(e,t){await c(this,e)&&await M(e,{bookmarks:t})&&t&&this.to(`session:${e}`).emit("bookmarks:list",t)},async"notes:create"(e,t){await c(this,e)?(await Z(e,t),this.emit("notes:index",await h(e))):this.emit("notes:index",[])},async"notes:request:index"(e){await c(this,e)?this.emit("notes:index",await h(e)):this.emit("notes:index",[])},async"notes:request:note"(e,t){if(await c(this,e)){let{doesOwn:s,note:n}=await S(e,t);s?this.emit("notes:note",t,n.contents):this.emit("notes:note",t,!1)}},async"notes:update:note"(e,t,s){if(await c(this,e)){let{doesOwn:n}=await S(e,t);n&&(A(t,s),this.to(`session:${e}`).emit("notes:note",t,s))}}};Object.setPrototypeOf(T,null);function J(e){new W(e).on("connection",s=>{for(let n in T)s.on(n,T[n].bind(s))})}function ye(){let e=new q;J(e),e.addListener("request",(s,n)=>{Y("./index.html",(o,r)=>{o?(n.statusCode=503,n.setHeader("content-type","application/json").end(JSON.stringify(r))):n.setHeader("content-type","text/html").end(r)})});let t=+(process.env.PORT||3e3);e.listen(Number.isSafeInteger(t)?t:3e3)}export{J as makeIO,ye as start};
