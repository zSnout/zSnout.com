var _=Object.defineProperty,N=Object.defineProperties;var F=Object.getOwnPropertyDescriptors;var d=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;var l=(i,r,e)=>r in i?_(i,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[r]=e,p=(i,r)=>{for(var e in r||(r={}))E.call(r,e)&&l(i,e,r[e]);if(d)for(var e of d(r))g.call(r,e)&&l(i,e,r[e]);return i},v=(i,r)=>N(i,F(r));var C=(i,r)=>{var e={};for(var t in i)E.call(i,t)&&r.indexOf(t)<0&&(e[t]=i[t]);if(i!=null&&d)for(var t of d(i))r.indexOf(t)<0&&g.call(i,t)&&(e[t]=i[t]);return e};var S=(i,r,e)=>(l(i,typeof r!="symbol"?r+"":r,e),e);import{W as m}from"./WebGlCanvas.e90473b2.js";import{p as o}from"./useOption.58bff586.js";import{s as j}from"./index.5323b2e8.js";class T extends m{constructor(e,x={}){var y=x,{bounds:t,fragmentString:s,saveBounds:n}=y,a=C(y,["bounds","fragmentString","saveBounds"]);var f,c,h,u;typeof s=="string"&&(s=m.extend(s,fy`uniform vec2 u_scale;uniform vec2 u_offset;`),s=m.extend(s,"uniform vec2 u_resolution;"),s=m.extendMain(s,fy`vec2 pos=(gl_FragCoord.xy/u_resolution)*u_scale+u_offset;`));super(e,v(p({},a),{fragmentString:s}));S(this,"saveBounds");S(this,"bounds");this.saveBounds=n!=null?n:!1,n&&(t={xStart:Number.isFinite(+o.xStart)?+o.xStart:-2,xEnd:Number.isFinite(+o.xEnd)?+o.xEnd:2,yStart:Number.isFinite(+o.yStart)?+o.yStart:-2,yEnd:Number.isFinite(+o.yEnd)?+o.yEnd:2}),this.setBounds({xStart:(f=t==null?void 0:t.xStart)!=null?f:-2,xEnd:(c=t==null?void 0:t.xEnd)!=null?c:2,yStart:(h=t==null?void 0:t.yStart)!=null?h:-2,yEnd:(u=t==null?void 0:t.yEnd)!=null?u:2}),j(this.canvas,()=>this.setBounds(this.bounds))}getNormalizedBounds(){let{xStart:e,xEnd:t,yStart:s,yEnd:n}=this.bounds;const a=e+t,x=s+n,y=(t-e)/2,f=(n-s)/2,{width:c,height:h}=this.canvas;return c>h?(e=a-c/h*y,t=a+c/h*y):(s=x-h/c*f,n=x+h/c*f),{xStart:e,xEnd:t,yStart:s,yEnd:n}}getAdjusters(){const{width:e,height:t}=this.canvas,{xStart:s,xEnd:n,yStart:a,yEnd:x}=this.getNormalizedBounds();return e>t?{scale:{x:n-s,y:x-a},offset:{x:(s-(n-s)/2)/2,y:a}}:{scale:{x:n-s,y:x-a},offset:{x:s,y:(a-(x-a)/2)/2}}}setBounds(e){const{xStart:t,xEnd:s,yStart:n,yEnd:a}=this.bounds=e;this.saveBounds&&(o.xStart=""+t,o.xEnd=""+s,o.yStart=""+n,o.yEnd=""+a);const{offset:x,scale:y}=this.getAdjusters();this.setUniform("u_offset",x.x,x.y),this.setUniform("u_scale",y.x,y.y)}pxToCoords(e,t){const{offset:s,scale:n}=this.getAdjusters();return{x:e/this.canvas.clientWidth*n.x+s.x,y:(1-t/this.canvas.clientHeight)*n.y+s.y}}mouseToCoords(){return this.pxToCoords(this.mouse.x,this.canvas.clientHeight-this.mouse.y)}}export{T as C};
