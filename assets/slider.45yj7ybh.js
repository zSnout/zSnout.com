import{I as $,a as B,f as z,F as N}from"./main.200onzgm.js";import{u as P}from"./index.dlnn8pzg.js";import{F as x}from"./FullscreenDisplay.od9apf4f.js";import{S as E,H}from"./BookmarkIcon.46krkaf8.js";import{u as M}from"./useCanvas.3phirwm2.js";import{l as W,r as v,w as X,h as A,x as L,C as V,D as w,F,a8 as o,B as R,u as k,ac as Y,ad as j}from"./runtime-core.esm-bundler.55v0mz3f.js";import{a as q}from"./_plugin-vue_export-helper.4yxwi37t.js";import"./LogoLight.3fmf1259.js";import"./SharedNav.4z4l3m5g.js";import"./VStack.3evi6szx.js";import"./Field.5c7fkv56.js";const G=u=>(Y("data-v-1dad7342"),u=u(),j(),u),J=G(()=>o("span",null,"/",-1)),K=W({__name:"slider",setup(u){const C=v(),S=v(),T=$(),f=v(!1),r=v(0),y=[],d=P(1,.25,100);for(let s of[C,S])M(s,{useDevicePixelRatio:!1}).then(t=>{const{canvas:c,onDispose:m,onResize:D,size:I}=t,{width:n,height:_}=I,a=c.getContext("2d");if(!a)throw new Error("Your device doesn't support HTML5 canvases.");let l=NaN,p=NaN;function h(){a.fillStyle="white",a.fillRect(0,0,n.value,_.value)}y.push(h),h(),D(h),m(X(A({pointer:T,rotation:r}),({pointer:{x:e,y:i}})=>{if(!f.value){l=NaN,p=NaN;return}e=(e-r.value)%n.value,e<0&&(e+=n.value),!isNaN(l)&&!isNaN(p)&&Math.abs(l-e)<n.value/2&&(a.beginPath(),a.moveTo(l,p),a.lineTo(e,i),a.stroke()),l=e,p=i})),setTimeout(()=>{const e=()=>Math.random()*200-100;for(let[i,b]of[[0,0],[-200,100],[100,300],[70,-250]])a.beginPath(),a.moveTo(n.value/2+i+e(),_.value/2+b+e()),a.lineTo(n.value/2+i+e(),_.value/2+b+e()),a.stroke()})});B("pointerdown",()=>f.value=!0),B("pointerup",()=>f.value=!1),z(()=>r.value+=d.value);function g(s){return s>innerWidth?s-2*innerWidth:s}return(s,t)=>(L(),V(x,null,{indicator:w(()=>[F(H,null,{default:w(()=>[o("span",{class:"button",onClick:t[0]||(t[0]=c=>d.value-=.25)},"Slower"),J,o("span",{class:"button",onClick:t[1]||(t[1]=c=>d.value+=.25)},"Faster"),F(E),o("span",{class:"button",onClick:t[2]||(t[2]=c=>y.forEach(m=>m()))}," Clear ")]),_:1})]),default:w(()=>[o("canvas",{ref_key:"canvasA",ref:C,class:"canvas",style:R(`transform: translateX(${g(r.value%(2*k(N)))}px)`)},null,4),o("canvas",{ref_key:"canvasB",ref:S,class:"canvas",style:R(`transform: translateX(${g((r.value+k(N))%(2*k(N)))}px)`)},null,4)]),_:1}))}});const le=q(K,[["__scopeId","data-v-1dad7342"]]);export{le as default};
