var _=Object.defineProperty,B=Object.defineProperties;var j=Object.getOwnPropertyDescriptors;var f=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var m=(i,r,e)=>r in i?_(i,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[r]=e,g=(i,r)=>{for(var e in r||(r={}))v.call(r,e)&&m(i,e,r[e]);if(f)for(var e of f(r))E.call(r,e)&&m(i,e,r[e]);return i},p=(i,r)=>B(i,j(r));var C=(i,r)=>{var e={};for(var t in i)v.call(i,t)&&r.indexOf(t)<0&&(e[t]=i[t]);if(i!=null&&f)for(var t of f(i))r.indexOf(t)<0&&E.call(i,t)&&(e[t]=i[t]);return e};var u=(i,r,e)=>(m(i,typeof r!="symbol"?r+"":r,e),e);import{W as l}from"./WebGlCanvas.d694d7f8.js";import{p as d}from"./useOption.6993de8b.js";import{s as z}from"./index.09bb21a7.js";class w extends l{constructor(e,o={}){var c=o,{bounds:t,fragmentString:s,saveBounds:n}=c,a=C(c,["bounds","fragmentString","saveBounds"]);var y,x,h,S;typeof s=="string"&&(s=l.extend(s,fy`uniform vec2 u_scale;uniform vec2 u_offset;`),s=l.extend(s,"uniform vec2 u_resolution;"),s=l.extendMain(s,fy`vec2 pos=(gl_FragCoord.xy/u_resolution)*u_scale+u_offset;`));super(e,p(g({},a),{fragmentString:s}));u(this,"saveBounds");u(this,"bounds");this.saveBounds=n!=null?n:!1,this.setBounds({xStart:(y=t==null?void 0:t.xStart)!=null?y:-2,xEnd:(x=t==null?void 0:t.xEnd)!=null?x:2,yStart:(h=t==null?void 0:t.yStart)!=null?h:-2,yEnd:(S=t==null?void 0:t.yEnd)!=null?S:2}),z(this.canvas,()=>this.setBounds(this.bounds))}getNormalizedBounds(){let{xStart:e,xEnd:t,yStart:s,yEnd:n}=this.bounds;const a=e+t,o=s+n,c=(t-e)/2,y=(n-s)/2,{width:x,height:h}=this.canvas;return x>h?(e=a-x/h*c,t=a+x/h*c):(s=o-h/x*y,n=o+h/x*y),{xStart:e,xEnd:t,yStart:s,yEnd:n}}getAdjusters(){const{width:e,height:t}=this.canvas,{xStart:s,xEnd:n,yStart:a,yEnd:o}=this.getNormalizedBounds();return e>t?{scale:{x:n-s,y:o-a},offset:{x:(s-(n-s)/2)/2,y:a}}:{scale:{x:n-s,y:o-a},offset:{x:s,y:(a-(o-a)/2)/2}}}setBounds(e){const{xStart:t,xEnd:s,yStart:n,yEnd:a}=this.bounds=e;this.saveBounds&&(d.xStart=""+t,d.xEnd=""+s,d.yStart=""+n,d.yEnd=""+a);const{offset:o,scale:c}=this.getAdjusters();this.setUniform("u_offset",o.x,o.y),this.setUniform("u_scale",c.x,c.y)}pxToCoords(e,t){const{offset:s,scale:n}=this.getAdjusters();return{x:e/this.canvas.clientWidth*n.x+s.x,y:(1-t/this.canvas.clientHeight)*n.y+s.y}}mouseToCoords(){return this.pxToCoords(this.mouse.x,this.canvas.clientHeight-this.mouse.y)}}export{w as C};
