import{d as e,o as c,c as p,w as a,k as u,a as n,b as s}from"./index.1pqvvm4i.js";const l=n("div",{class:"markdown-body"},[n("p",null,"Today we\u2019re going to make a reactivity system in JavaScript, harness it to create DOM constructs, and create a JSX framework using our new system."),n("p",null,[s("We\u2019ll base it on the latest JavaScript web framework: Willow. I know it\u2019s the latest because I released it two days ago in the afternoon and even the JS ecosystem doesn\u2019t move "),n("em",null,"that"),s(" fast. "),n("a",{href:"https://github.com/zSnout/willow"},"Willow"),s(" is a reactive web framework that zSnout released on September 22. It enables JSX syntax, compiles to DOM nodes, and omits a virtual DOM. I created it over the span of about a week, so it\u2019s probably very buggy. However, it seems to work well enough for now. The library is based around a core reactivity system which borrows many ideas from SolidJS that I like. It also includes some custom constructs.")]),n("h2",{id:"the-reactive-primitives",tabindex:"-1"},"The reactive primitives"),n("p",null,"Like SolidJS, Willow has two reactive primitives: signals and effects. A signal contains a value and updates linked effects whenever it changes. An effect can access signals and is rerun whenever the value of accessed signals change."),n("p",null,"We\u2019re going to use the subscriber pattern. Our signals will keep an internal list of effects and call them whenever they update. First we\u2019ll create a class to store our effects. We\u2019ll also create a variable that stores the current effect scope."),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"let"),s(" currentScope"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"EffectScope"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),s("effect"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("effect "),n("span",{class:"token operator"},"="),s(" effect"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" parent "),n("span",{class:"token operator"},"="),s(" currentScope"),n("span",{class:"token punctuation"},";"),s(`
    currentScope `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"effect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    currentScope `),n("span",{class:"token operator"},"="),s(" parent"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("We can make an effect by using "),n("code",{class:""},"new EffectScope(some function)"),s(" and run it by using "),n("code",{class:""},"scope.run()"),s(". When the effect is run, it will capture the parent scope, set the current scope to itself, run the effect, and set the current scope to the parent.")]),n("p",null,[s("Now let\u2019s make a "),n("code",{class:""},"createEffect"),s(" function that instantiates an effect and hides this on the user\u2019s end. It will need to call the effect once to initialize the signals.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),s("effect"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" scope "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"EffectScope"),n("span",{class:"token punctuation"},"("),s("effect"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  scope`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("Speaking of signals, let\u2019s create those. They\u2019re by far the most complex of the reactive set. We\u2019ll make a "),n("code",{class:""},"createSignal"),s(" function that returns a getter and a setter.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" value"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),s("newValue"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    value `),n("span",{class:"token operator"},"="),s(" newValue"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"// A tuple of the getter and the setter."),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"["),s("get"),n("span",{class:"token punctuation"},","),s(" set"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("Of course, we need to track calls of "),n("code",{class:""},"get"),s(". We\u2019ll use a "),n("code",{class:""},"Set"),s(" that stores any effect scopes that have called the signal getter.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// This Set contains every EffectScope that calls `get`."),s(`
  `),n("span",{class:"token keyword"},"const"),s(" tracked "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Only call this if we're inside an EffectScope."),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("currentScope"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// We add the current effect scope to the `tracked` list."),s(`
      tracked`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("currentScope"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"return"),s(" value"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),s("newValue"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    value `),n("span",{class:"token operator"},"="),s(" newValue"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"// A tuple of the getter and the setter."),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"["),s("get"),n("span",{class:"token punctuation"},","),s(" set"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,"Now that we track when the getter is called, let\u2019s rerun all the tracked effects whenever the setter is called."),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// This Set contains every EffectScope that calls `get`."),s(`
  `),n("span",{class:"token keyword"},"const"),s(" tracked "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Only call this if we're inside an EffectScope."),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("currentScope"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// We add the current effect scope to the `tracked` list."),s(`
      tracked`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("currentScope"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"return"),s(" value"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),s("newValue"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    value `),n("span",{class:"token operator"},"="),s(" newValue"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// We rerun every tracked effect."),s(`
    tracked`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("scope"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" scope"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"// A tuple of the getter and the setter."),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"["),s("get"),n("span",{class:"token punctuation"},","),s(" set"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,"Before we test this, let\u2019s make one more reactive item: a memo. A memo combines an effect and a signal. It accepts a function that may call signal accessors and returns a value."),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createMemo"),n("span",{class:"token punctuation"},"("),s("accessor"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// We initialize a signal with no value."),s(`
  `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"["),s("get"),n("span",{class:"token punctuation"},","),s(" set"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token comment"},"// We then create an effect that sets the signal to the accessor's value."),s(`
  `),n("span",{class:"token comment"},"// This allows the accessor to call signals."),s(`
  `),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"accessor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"return"),s(" get"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("A memo is "),n("em",null,"not"),s(" a primitive because it doesn\u2019t directly interact with "),n("code",{class:""},"EffectScope"),s("s. Instead, it combines "),n("code",{class:""},"createSignal"),s(" and "),n("code",{class:""},"createEffect"),s(" to create a new reactive item.")]),n("p",null,"Here\u2019s our entire reactive system. It may look like a lot, but it\u2019s only 35 lines of code."),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"let"),s(" currentScope"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"EffectScope"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),s("effect"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("effect "),n("span",{class:"token operator"},"="),s(" effect"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" parent "),n("span",{class:"token operator"},"="),s(" currentScope"),n("span",{class:"token punctuation"},";"),s(`
    currentScope `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"effect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    currentScope `),n("span",{class:"token operator"},"="),s(" parent"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),s("effect"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" scope "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"EffectScope"),n("span",{class:"token punctuation"},"("),s("effect"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  scope`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// This Set contains every EffectScope that calls `get`."),s(`
  `),n("span",{class:"token keyword"},"const"),s(" tracked "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Only call this if we're inside an EffectScope."),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("currentScope"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// We add the current effect scope to the `tracked` list."),s(`
      tracked`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("currentScope"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"return"),s(" value"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),s("newValue"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    value `),n("span",{class:"token operator"},"="),s(" newValue"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// We rerun every tracked effect."),s(`
    tracked`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("scope"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" scope"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"// A tuple of the getter and the setter."),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"["),s("get"),n("span",{class:"token punctuation"},","),s(" set"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createMemo"),n("span",{class:"token punctuation"},"("),s("accessor"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// We initialize a signal with no value."),s(`
  `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"["),s("get"),n("span",{class:"token punctuation"},","),s(" set"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token comment"},"// We then create an effect that sets the signal to the accessor's value."),s(`
  `),n("span",{class:"token comment"},"// This allows the accessor to call signals."),s(`
  `),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"accessor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"return"),s(" get"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,"Minified, that\u2019s 335 characters. That\u2019s the smallest reactive library I\u2019ve ever seen!"),n("pre",{class:"language-js"},[n("code",{class:"language-js"},[n("span",{class:"token keyword"},"let"),s(" c"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"i"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("effect"),n("span",{class:"token operator"},"="),s("t"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"const"),s(" t"),n("span",{class:"token operator"},"="),s("c"),n("span",{class:"token punctuation"},";"),s("c"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},","),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"effect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("c"),n("span",{class:"token operator"},"="),s("t"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"i"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"const"),s(" t"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Set"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"return"),s(" c"),n("span",{class:"token operator"},"&&"),s("t"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"s"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s("e"),n("span",{class:"token operator"},"="),s("s"),n("span",{class:"token punctuation"},","),s("t"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"u"),n("span",{class:"token operator"},"=>"),s("u"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},"["),s("n"),n("span",{class:"token punctuation"},","),s("f"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createMemo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"const"),n("span",{class:"token punctuation"},"["),s("t"),n("span",{class:"token punctuation"},","),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"="),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token function"},"n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"e"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("t"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("h2",{id:"testing-our-system",tabindex:"-1"},"Testing our system"),n("p",null,"Let\u2019s test our code by writing a basic example. We\u2019ll have a signal for a number and a memo that doubles that number. We\u2019ll also output the memo\u2019s value when it changes."),n("p",null,"I encourage readers using a desktop to copy the examples and try them in a browser."),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},","),s(" setNumber"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// number() is now 7."),s(`

`),n("span",{class:"token keyword"},"const"),s(" doubled "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createMemo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"number"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// This tracks `number`."),s(`
`),n("span",{class:"token comment"},"// doubled() is now 14."),s(`

`),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"doubled"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// This tracks `doubled`."),s(`
`),n("span",{class:"token comment"},"// It logs 14."),s(`

`),n("span",{class:"token function"},"setNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// number() is now 3."),s(`
`),n("span",{class:"token comment"},"// This activates doubled, which is now 6."),s(`
`),n("span",{class:"token comment"},"// This activates the effect, which now logs 6."),s(`
`)])]),n("h2",{id:"using-it-in-the-dom",tabindex:"-1"},"Using it in the DOM"),n("p",null,[s("Let\u2019s use our system in JavaScript\u2019s DOM. We can create reactive text nodes. We can use "),n("code",{class:""},"document.createTextNode"),s(" to create a text node and set its "),n("code",{class:""},".data"),s(" property to set the content. We\u2019ll wrap this in a function so we can reuse it.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),s("accessor"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" node "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token comment"},"// We'll add a check to make sure we have an accessor and not a plain value."),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" accessor "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},'"function"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// We have a proper accessor and can set up an effect."),s(`

    `),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      node`),n("span",{class:"token punctuation"},"."),s("data "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"accessor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Since we have a plain value, we'll just set the node data once."),s(`

    node`),n("span",{class:"token punctuation"},"."),s("data "),n("span",{class:"token operator"},"="),s(" accessor"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("Let\u2019s use our latest component in some standard DOM code. We\u2019ll create a heading that displays the value of "),n("code",{class:""},"name"),s(". We\u2019ll also create an input field where you can type your name.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"["),s("name"),n("span",{class:"token punctuation"},","),s(" setName"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Zachary"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(" node "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" element "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"h1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
element`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" field "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"input"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
field`),n("span",{class:"token punctuation"},"."),s("value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"name"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
field`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"input"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"setName"),n("span",{class:"token punctuation"},"("),s("field"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

document`),n("span",{class:"token punctuation"},"."),s("body"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("element"),n("span",{class:"token punctuation"},","),s(" field"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("p",null,[s("We can extend this to work for DOM properties. Let\u2019s make a "),n("code",{class:""},"createProperty"),s(" function. It\u2019ll accept a DOM node, a property name, and an accessor for the property\u2019s value. Try coding it yourself before checking the solution below. Bonus points if it can also accept a non-function and set the property once instead of erroring.")]),n("details",null,[n("summary",null,"Reveal the solution by clicking this dropdown."),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createProperty"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},","),s(" name"),n("span",{class:"token punctuation"},","),s(" accessor"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// We'll add a check to make sure we have an accessor and not a plain value."),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" accessor "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"function"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// We were passed a proper accessor, so we'll create an effect."),s(`

    `),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// We use an index because we're setting a property, not an attribute."),s(`
      node`),n("span",{class:"token punctuation"},"["),s("name"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"accessor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// If the accessor isn't a function, we'll just set it once."),s(`

    node`),n("span",{class:"token punctuation"},"["),s("name"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" accessor"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])]),n("p",null,[s("We can now use "),n("code",{class:""},"createProperty"),s(" combined with "),n("code",{class:""},"style"),s(" to create dynamic styles. Let\u2019s make the heading red if the user\u2019s name starts with "),n("code",{class:""},"R"),s(" and blue if their name starts with "),n("code",{class:""},"B"),s(". By now, you can probably guess that we\u2019ll need a memo for the class name. Other than that, we\u2019ll copy and paste our earlier code.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"["),s("name"),n("span",{class:"token punctuation"},","),s(" setName"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Zachary"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(" node "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" element "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"h1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
element`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" styles "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createMemo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"name"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"R"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"color: red"'),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"name"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"B"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"color: blue"'),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"createProperty"),n("span",{class:"token punctuation"},"("),s("element"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"style"'),n("span",{class:"token punctuation"},","),s(" styles"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" field "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"input"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
field`),n("span",{class:"token punctuation"},"."),s("value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"name"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
field`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"input"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"setName"),n("span",{class:"token punctuation"},"("),s("field"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

document`),n("span",{class:"token punctuation"},"."),s("body"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("element"),n("span",{class:"token punctuation"},","),s(" field"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("p",null,[s("Again, you should try this example if possible. Notice how starting the input field with an "),n("code",{class:""},"R"),s(" or "),n("code",{class:""},"B"),s(" changes the heading\u2019s color.")]),n("p",null,[s("Let\u2019s now make an "),n("code",{class:""},"appendChild"),s(" function that appends a child or text node to a DOM node so that we don\u2019t have to manually call "),n("code",{class:""},"createTextNode"),s(" and "),n("code",{class:""},".append"),s(". We\u2019ll use a few instanceof and typeof checks to make sure everything works properly.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"appendChild"),n("span",{class:"token punctuation"},"("),s("parent"),n("span",{class:"token punctuation"},","),s(" child"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("child "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"Node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// We were passed a DOM node, so we'll append it normally."),s(`

    parent`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Anything other than a DOM node will be passed through `createTextNode`."),s(`
    `),n("span",{class:"token comment"},"// That will set up reactive text nodes if we were passed an accessor and"),s(`
    `),n("span",{class:"token comment"},"// a plain text node if we were passed a non-accessor."),s(`

    parent`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("Let\u2019s make a "),n("code",{class:""},"createElement"),s(" function to create an HTML element, add attributes, and add children.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// We'll use ...rest parameter syntax to capture any children passed."),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),s("tag"),n("span",{class:"token punctuation"},","),s(" props"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"..."),s("children"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Initialize a DOM element with the given tag."),s(`
  `),n("span",{class:"token keyword"},"const"),s(" node "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),s("tag"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token comment"},"// We only want to set properties if we're passed an actual object."),s(`
  `),n("span",{class:"token comment"},"// We have to do the extra check for props != null because in JavaScript,"),s(`
  `),n("span",{class:"token comment"},'// typeof null == "object".'),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" props "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"object"'),s(),n("span",{class:"token operator"},"&&"),s(" props "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// This syntax iterates over each key in the object."),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" key "),n("span",{class:"token keyword"},"in"),s(" props"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// If the key starts with on:, we'll register it as an event listener."),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("key"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"on:"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        node`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),s(`
          `),n("span",{class:"token comment"},"/* We slice the on: away. */"),s(" key"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
          props`),n("span",{class:"token punctuation"},"["),s("key"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// We'll create a property with the given key and value."),s(`
        `),n("span",{class:"token comment"},"// `createProperty` will handle reactive properties for us."),s(`
        `),n("span",{class:"token function"},"createProperty"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},","),s(" key"),n("span",{class:"token punctuation"},","),s(" props"),n("span",{class:"token punctuation"},"["),s("key"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"// This syntax iterates over each element of the `children` array."),s(`
  `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" child "),n("span",{class:"token keyword"},"of"),s(" children"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// `appendChild` already does the logic to check for nodes vs. accessors."),s(`
    `),n("span",{class:"token function"},"appendChild"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},","),s(" child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"// Of course, we have to return the output node."),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,"I\u2019m sure some of you see where we\u2019re going, but just wait a bit for the final result."),n("p",null,"Here\u2019s all of our DOM code so far (not including the reactive primitives)."),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),s("accessor"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" node "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token comment"},"// We'll add a check to make sure we have an accessor and not a plain value."),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" accessor "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},'"function"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// We have a proper accessor and can set up an effect."),s(`

    `),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      node`),n("span",{class:"token punctuation"},"."),s("data "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"accessor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Since we have a plain value, we'll just set the node data once."),s(`

    node`),n("span",{class:"token punctuation"},"."),s("data "),n("span",{class:"token operator"},"="),s(" accessor"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createProperty"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},","),s(" name"),n("span",{class:"token punctuation"},","),s(" accessor"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// We'll add a check to make sure we have an accessor and not a plain value."),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" accessor "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"function"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// We were passed a proper accessor, so we'll create an effect."),s(`

    `),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// We use an index because we're setting a property, not an attribute."),s(`
      node`),n("span",{class:"token punctuation"},"["),s("name"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"accessor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// If the accessor isn't a function, we'll just set it once."),s(`

    node`),n("span",{class:"token punctuation"},"["),s("name"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" accessor"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"appendChild"),n("span",{class:"token punctuation"},"("),s("parent"),n("span",{class:"token punctuation"},","),s(" child"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("child "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"Node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// We were passed a DOM node, so we'll append it normally."),s(`

    parent`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// Anything other than a DOM node will be passed through `createTextNode`."),s(`
    `),n("span",{class:"token comment"},"// That will set up reactive text nodes if we were passed an accessor and"),s(`
    `),n("span",{class:"token comment"},"// a plain text node if we were passed a non-accessor."),s(`

    parent`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// We'll use ...rest parameter syntax to capture any children passed."),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),s("tag"),n("span",{class:"token punctuation"},","),s(" props"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"..."),s("children"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Initialize a DOM element with the given tag."),s(`
  `),n("span",{class:"token keyword"},"const"),s(" node "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),s("tag"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token comment"},"// We only want to set properties if we're passed an actual object."),s(`
  `),n("span",{class:"token comment"},"// We have to do the extra check for props != null because in JavaScript,"),s(`
  `),n("span",{class:"token comment"},'// typeof null == "object".'),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" props "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"object"'),s(),n("span",{class:"token operator"},"&&"),s(" props "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// This syntax iterates over each key in the object."),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" key "),n("span",{class:"token keyword"},"in"),s(" props"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// If the key starts with on:, we'll register it as an event listener."),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("key"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"on:"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        node`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),s(`
          `),n("span",{class:"token comment"},"/* We slice the on: away. */"),s(" key"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
          props`),n("span",{class:"token punctuation"},"["),s("key"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// We'll create a property with the given key and value."),s(`
        `),n("span",{class:"token comment"},"// `createProperty` will handle reactive properties for us."),s(`
        `),n("span",{class:"token function"},"createProperty"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},","),s(" key"),n("span",{class:"token punctuation"},","),s(" props"),n("span",{class:"token punctuation"},"["),s("key"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"// This syntax iterates over each element of the `children` array."),s(`
  `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" child "),n("span",{class:"token keyword"},"of"),s(" children"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// `appendChild` already does the logic to check for nodes vs. accessors."),s(`
    `),n("span",{class:"token function"},"appendChild"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},","),s(" child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"// Of course, we have to return the output node."),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,"Of course, I can\u2019t resist passing it (and the reactive library) through a minifier and getting an 879 byte output. That is tiny (0.85kb)!"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"let"),s(" c"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"i"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("effect"),n("span",{class:"token operator"},"="),s("e"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"const"),s(" e"),n("span",{class:"token operator"},"="),s("c"),n("span",{class:"token punctuation"},";"),s("c"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},","),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"effect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("c"),n("span",{class:"token operator"},"="),s("e"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"i"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"const"),s(" e"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Set"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"return"),s(" c"),n("span",{class:"token operator"},"&&"),s("e"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("t"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s("t"),n("span",{class:"token operator"},"="),s("o"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),s("r"),n("span",{class:"token operator"},"=>"),s("r"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},"["),s("n"),n("span",{class:"token punctuation"},","),s("f"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createMemo"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"const"),n("span",{class:"token punctuation"},"["),s("e"),n("span",{class:"token punctuation"},","),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"="),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token function"},"n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"t"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"const"),s(" e"),n("span",{class:"token operator"},"="),s("document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"typeof"),s(" t"),n("span",{class:"token operator"},"=="),n("span",{class:"token string"},'"function"'),n("span",{class:"token operator"},"?"),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s("e"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token operator"},"="),n("span",{class:"token function"},"t"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s("e"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token operator"},"="),s("t"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createProperty"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},","),s("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"typeof"),s(" n"),n("span",{class:"token operator"},"=="),n("span",{class:"token string"},'"function"'),n("span",{class:"token operator"},"?"),n("span",{class:"token function"},"createEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"=>"),n("span",{class:"token punctuation"},"{"),s("t"),n("span",{class:"token punctuation"},"["),s("e"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"="),n("span",{class:"token function"},"n"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s("t"),n("span",{class:"token punctuation"},"["),s("e"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},"="),s("n"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"appendChild"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s("e "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"Node"),n("span",{class:"token operator"},"?"),s("t"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s("t"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"createTextNode"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"..."),s("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"const"),s(" f"),n("span",{class:"token operator"},"="),s("document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" e"),n("span",{class:"token operator"},"=="),n("span",{class:"token string"},'"object"'),n("span",{class:"token operator"},"&&"),s("e"),n("span",{class:"token operator"},"!="),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" o "),n("span",{class:"token keyword"},"in"),s(" e"),n("span",{class:"token punctuation"},")"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"on:"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"?"),s("f"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},"["),s("o"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),n("span",{class:"token function"},"createProperty"),n("span",{class:"token punctuation"},"("),s("f"),n("span",{class:"token punctuation"},","),s("o"),n("span",{class:"token punctuation"},","),s("e"),n("span",{class:"token punctuation"},"["),s("o"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" o "),n("span",{class:"token keyword"},"of"),s(" n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token function"},"appendChild"),n("span",{class:"token punctuation"},"("),s("f"),n("span",{class:"token punctuation"},","),s("o"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token keyword"},"return"),s(" f"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("Okay, time for the example. Let\u2019s rewrite our previous code using the new "),n("code",{class:""},"createElement"),s(" function.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"["),s("name"),n("span",{class:"token punctuation"},","),s(" setName"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Zachary"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" element "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),s(`
  `),n("span",{class:"token string"},'"h1"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(`
    style`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"createMemo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"name"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"R"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"color: red"'),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"name"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"B"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"color: blue"'),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  name
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" field "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"input"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// We call `name` because we only want `value` to be set once."),s(`
  `),n("span",{class:"token string-property property"},'"value"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"name"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token string"},'"on:input"'),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"setName"),n("span",{class:"token punctuation"},"("),s("field"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

document`),n("span",{class:"token punctuation"},"."),s("body"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("element"),n("span",{class:"token punctuation"},","),s(" field"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("p",null,"I encourage you to try out this example in a real browser if you can."),n("h2",{id:"wait%2C-did-we-make-a-jsx-library%3F",tabindex:"-1"},"Wait, did we make a JSX library?"),n("p",null,[s("My careful readers will notice that the signature of "),n("code",{class:""},"createElement"),s(" matches the one of "),n("code",{class:""},"React.createElement"),s(" and almost every other JSX library (including Willow). Let\u2019s test it out by creating an empty TypeScript project and using our "),n("code",{class:""},"createElement"),s(" function as the JSX factory function.")]),n("p",null,[s("Just plug this into a "),n("code",{class:""},"tsconfig.json"),s(",")]),n("pre",{class:"language-json"},[n("code",{class:"language-json"},[n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"compilerOptions"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"allowJs"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"jsx"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"react"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"jsxFactory"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"createElement"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"rootDir"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"src"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"outDir"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"dist"'),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("this into "),n("code",{class:""},"package.json"),s(",")]),n("pre",{class:"language-json"},[n("code",{class:"language-json"},[n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"dependencies"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"typescript"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"latest"'),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("and create a minimal "),n("code",{class:""},"index.html"),s(".")]),n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token doctype"},[n("span",{class:"token punctuation"},"<!"),n("span",{class:"token doctype-tag"},"DOCTYPE"),s(),n("span",{class:"token name"},"html"),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("html")]),s(),n("span",{class:"token attr-name"},"lang"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("en"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),s(),n("span",{class:"token attr-name"},"defer"),s(),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("./dist/library.js"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"}),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),s(),n("span",{class:"token attr-name"},"defer"),s(),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("./dist/index.js"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"}),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("html")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("p",null,[s("Then paste the minified code into "),n("code",{class:""},"src/library.js"),s(" and this into "),n("code",{class:""},"src/index.jsx"),s(":")]),n("pre",{class:"language-tsx"},[n("code",{class:"language-tsx"},[n("span",{class:"token comment"},"// We changed `name` to `myName` because TypeScript complains about re-declaring"),s(`
`),n("span",{class:"token comment"},"// a block-scope `name` variable."),s(`

`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"["),s("myName"),n("span",{class:"token punctuation"},","),s(" setName"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createSignal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Zachary"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" element "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("h1")]),s(`
    `),n("span",{class:"token attr-name"},"style"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token function"},"createMemo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"myName"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"R"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"color: red"'),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"myName"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"B"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"color: blue"'),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}")]),s(`
  `),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"},`
    `),n("span",{class:"token punctuation"},"{"),s("myName"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token plain-text"},`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("h1")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" field "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("input")]),s(),n("span",{class:"token attr-name"},"value"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token function"},"myName"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token attr-name"},[n("span",{class:"token namespace"},"on:"),s("input")]),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"setName"),n("span",{class:"token punctuation"},"("),s("field"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token punctuation"},"/>")]),n("span",{class:"token punctuation"},";"),s(`

document`),n("span",{class:"token punctuation"},"."),s("body"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"append"),n("span",{class:"token punctuation"},"("),s("element"),n("span",{class:"token punctuation"},","),s(" field"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("p",null,[s("Compile the JSX code by running "),n("code",{class:""},"npx tsc -b"),s(". Then run "),n("code",{class:""},"npm serve"),s(" to start a local server and open the URL that it gives you to view your compiled code.")]),n("p",null,[s("Congratulations! You now know how to build a web framework! Of course, there are a few features we\u2019re missing, but the core elements are there. Try experimenting around with other JSX code. Maybe you could add TypeScript support to it, or perhaps you want to pass an object to the "),n("code",{class:""},"style"),s(" prop. We can play around with this and fine-tune it for hours, but that\u2019s what mainstream frameworks are for.")]),n("hr"),n("p",null,"You now know how we at the zSnout team designed and built Willow. We basically followed this exact process but with more features. Hopefully you learned something from today\u2019s article, and I hope to see you next time on the zSnout blog.")],-1),k=n("nav",null,[n("ul",null,[n("li",null,[n("a",{href:"#the-reactive-primitives"},"The reactive primitives")]),n("li",null,[n("a",{href:"#testing-our-system"},"Testing our system")]),n("li",null,[n("a",{href:"#using-it-in-the-dom"},"Using it in the DOM")]),n("li",null,[n("a",{href:"#wait%2C-did-we-make-a-jsx-library%3F"},"Wait, did we make a JSX library?")])])],-1),i={author:"Zachary Sakowitz",category:"code",date:1664064e6,hasToc:!0},y="",w=e({__name:"lets-make-a-web-framework",setup(r,{expose:t}){return t({frontmatter:{author:"Zachary Sakowitz",category:"code",date:1664064e6,hasToc:!0},excerpt:void 0}),(d,f)=>{const o=u("prose");return c(),p(o,{frontmatter:i},{aside:a(()=>[k]),default:a(()=>[l]),_:1})}}});export{w as default,y as excerpt,i as frontmatter};
