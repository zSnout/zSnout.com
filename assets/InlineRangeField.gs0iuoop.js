import{d as f,r as c,o as _,f as g,_ as v}from"./index.4z0bzixf.js";const I=["autocomplete","max","min","step","value"],h=f({__name:"InlineRangeField",props:{modelValue:{},autocomplete:{},min:{},max:{},step:{}},emits:["update:modelValue"],setup(u,{emit:i}){const p=u,a=c();function m(e){if(e.preventDefault(),e.touches.length!==1||!a.value)return;const{x:t,width:n}=a.value.getBoundingClientRect(),r=Math.min(1,Math.max(0,(e.touches[0].clientX-t)/n)),{max:d=100,min:s=0,step:o}=p;let l=r*(d-s)+s;o!=="any"&&o&&(l=~~(l/o)*o),i("update:modelValue",l)}return(e,t)=>(_(),g("input",{ref_key:"field",ref:a,class:"field",autocomplete:e.autocomplete??"off",max:e.max,min:e.min,step:e.step,value:e.modelValue,type:"range",onInput:t[0]||(t[0]=n=>e.$emit("update:modelValue",+n.target.value)),onPointerdown:t[1]||(t[1]=n=>n.target.setPointerCapture(n.pointerId)),onTouchmove:m},null,40,I))}});const y=v(h,[["__scopeId","data-v-7c55a7f4"]]);export{y as I};
